local MoonLight = {}

local tween = game:GetService("TweenService")
local input = game:GetService("UserInputService")
local run = game:GetService("RunService")
local contextActionService = game:GetService("ContextActionService")
local guiService = game:GetService("GuiService")
local httpService = game:GetService("HttpService")

local Utility = {}
local Objects = {}

function Utility:TweenObject(obj, properties, duration, easingStyle, easingDirection, ...)
    local tweenInfo = TweenInfo.new(duration, easingStyle or Enum.EasingStyle.Sine, easingDirection or Enum.EasingDirection.InOut, ...)
    tween:Create(obj, tweenInfo, properties):Play()
end

function MoonLight:DraggingEnabled(frame, parent)
    parent = parent or frame
    local dragging = false
    local dragInput, mousePos, framePos

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            mousePos = input.Position
            framePos = parent.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    input.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - mousePos
            parent.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
        end
    end)
end

function MoonLight:ResizeEnabled(frame, parent)
    parent = parent or frame
    local resizing = false
    local resizeInput, mousePos, frameSize

    local resizeHandle = Instance.new("TextButton")
    resizeHandle.Size = UDim2.new(0, 15, 0, 15)
    resizeHandle.Position = UDim2.new(1, -15, 1, -15)
    resizeHandle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    resizeHandle.Text = ""
    resizeHandle.Parent = parent
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = resizeHandle

    resizeHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            resizing = true
            mousePos = input.Position
            frameSize = parent.Size
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    resizing = false
                end
            end)
        end
    end)

    resizeHandle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            resizeInput = input
        end
    end)

    input.InputChanged:Connect(function(input)
        if input == resizeInput and resizing then
            local delta = input.Position - mousePos
            local newSize = UDim2.new(frameSize.X.Scale, frameSize.X.Offset + delta.X, frameSize.Y.Scale, frameSize.Y.Offset + delta.Y)
            if newSize.X.Offset >= 400 and newSize.Y.Offset >= 300 then
                parent.Size = newSize
            end
        end
    end)
end

local themes = {
    SchemeColor = Color3.fromRGB(0, 170, 255),
    Background = Color3.fromRGB(20, 20, 30),
    Header = Color3.fromRGB(15, 15, 25),
    TextColor = Color3.fromRGB(220, 220, 220),
    ElementColor = Color3.fromRGB(30, 30, 45)
}

local themeStyles = {
    MoonTheme1 = {
        SchemeColor = Color3.fromRGB(0, 170, 255),
        Background = Color3.fromRGB(20, 20, 30),
        Header = Color3.fromRGB(15, 15, 25),
        TextColor = Color3.fromRGB(220, 220, 220),
        ElementColor = Color3.fromRGB(30, 30, 45)
    },
    MoonTheme2 = {
        SchemeColor = Color3.fromRGB(255, 85, 127),
        Background = Color3.fromRGB(20, 20, 30),
        Header = Color3.fromRGB(15, 15, 25),
        TextColor = Color3.fromRGB(220, 220, 220),
        ElementColor = Color3.fromRGB(30, 30, 45)
    }
}

local SettingsT = {}
local Name = "MoonLightConfig.json"

pcall(function()
    if not pcall(function() readfile(Name) end) then
        writefile(Name, httpService:JSONEncode(SettingsT))
    end
    Settings = httpService:JSONDecode(readfile(Name))
end)

local LibName = tostring(math.random(1, 100))..tostring(math.random(1, 50))..tostring(math.random(1, 100))

function MoonLight:ToggleUI()
    local gui = game.CoreGui[LibName]
    if gui.Enabled then
        Utility:TweenObject(gui.Main, {Position = UDim2.new(0.5, 0, -0.5, 0)}, 0.5, Enum.EasingStyle.Quad)
        wait(0.5)
        gui.Enabled = false
    else
        gui.Enabled = true
        gui.Main.Position = UDim2.new(0.5, 0, -0.5, 0)
        Utility:TweenObject(gui.Main, {Position = UDim2.new(0.5, 0, 0.5, 0)}, 0.5, Enum.EasingStyle.Quad)
    end
end

function MoonLight:MinimizeUI()
    local gui = game.CoreGui[LibName]
    local main = gui.Main
    if main.Size ~= UDim2.new(0, 600, 0, 50) then
        Utility:TweenObject(main, {Size = UDim2.new(0, 600, 0, 50), Position = UDim2.new(0.5, 0, 0, 0)}, 0.4, Enum.EasingStyle.Quad)
        main.MainSide.Visible = false
        main.pages.Visible = false
    else
        Utility:TweenObject(main, {Size = UDim2.new(0, 600, 0, 400), Position = UDim2.new(0.5, 0, 0.5, 0)}, 0.4, Enum.EasingStyle.Quad)
        main.MainSide.Visible = true
        main.pages.Visible = true
    end
end

function MoonLight:ShowIntro()
    local introGui = Instance.new("ScreenGui")
    introGui.Name = "MoonLightIntro"
    introGui.Parent = game.CoreGui
    introGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
    introGui.IgnoreGuiInset = true

    local backdrop = Instance.new("Frame")
    backdrop.Size = UDim2.new(1, 0, 1, 0)
    backdrop.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    backdrop.BackgroundTransparency = 0.3
    backdrop.Parent = introGui

    local letterM = Instance.new("TextLabel")
    letterM.Size = UDim2.new(0, 100, 0, 100)
    letterM.Position = UDim2.new(0.5, -50, 1.5, 0)
    letterM.BackgroundTransparency = 1
    letterM.Text = "M"
    letterM.Font = Enum.Font.GothamBold
    letterM.TextSize = 80
    letterM.TextColor3 = themes.SchemeColor
    letterM.Parent = introGui

    local otherLetters = Instance.new("TextLabel")
    otherLetters.Size = UDim2.new(0, 400, 0, 100)
    otherLetters.Position = UDim2.new(1.5, 0, 0.5, -50)
    otherLetters.BackgroundTransparency = 1
    otherLetters.Text = "OONLIGHT"
    otherLetters.Font = Enum.Font.GothamBold
    otherLetters.TextSize = 80
    otherLetters.TextColor3 = themes.TextColor
    otherLetters.Parent = introGui

    Utility:TweenObject(letterM, {Position = UDim2.new(0.5, -250, 0.5, -50)}, 0.8, Enum.EasingStyle.Back)
    wait(1.5)
    Utility:TweenObject(otherLetters, {Position = UDim2.new(0.5, -150, 0.5, -50)}, 0.6, Enum.EasingStyle.Back)
    wait(3)
    Utility:TweenObject(backdrop, {BackgroundTransparency = 1}, 0.5)
    Utility:TweenObject(letterM, {TextTransparency = 1, Position = UDim2.new(0.5, -250, -0.5, 0)}, 0.5, Enum.EasingStyle.Quad)
    Utility:TweenObject(otherLetters, {TextTransparency = 1, Position = UDim2.new(1.5, 0, 0.5, -50)}, 0.5, Enum.EasingStyle.Quad)
    wait(0.5)
    introGui:Destroy()
end

function MoonLight.CreateLib(kavName, themeList)
    if not themeList then
        themeList = themes
    elseif type(themeList) == "string" then
        themeList = themeStyles[themeList] or themes
    end

    themeList = themeList or {}
    themeList.SchemeColor = themeList.SchemeColor or Color3.fromRGB(0, 170, 255)
    themeList.Background = themeList.Background or Color3.fromRGB(20, 20, 30)
    themeList.Header = themeList.Header or Color3.fromRGB(15, 15, 25)
    themeList.TextColor = themeList.TextColor or Color3.fromRGB(220, 220, 220)
    themeList.ElementColor = themeList.ElementColor or Color3.fromRGB(30, 30, 45)

    kavName = kavName or "MoonLight UI"
    table.insert(MoonLight, kavName)
    for i, v in pairs(game.CoreGui:GetChildren()) do
        if v:IsA("ScreenGui") and v.Name == kavName then
            v:Destroy()
        end
    end

    MoonLight:ShowIntro()

    local ScreenGui = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local MainCorner = Instance.new("UICorner")
    local MainHeader = Instance.new("Frame")
    local headerCover = Instance.new("UICorner")
    local coverup = Instance.new("Frame")
    local title = Instance.new("TextLabel")
    local close = Instance.new("ImageButton")
    local minimize = Instance.new("ImageButton")
    local MainSide = Instance.new("Frame")
    local sideCorner = Instance.new("UICorner")
    local coverup_2 = Instance.new("Frame")
    local tabFrames = Instance.new("Frame")
    local tabListing = Instance.new("UIListLayout")
    local pages = Instance.new("Frame")
    local Pages = Instance.new("Folder")
    local infoContainer = Instance.new("Frame")
    local blurFrame = Instance.new("Frame")

    MoonLight:DraggingEnabled(MainHeader, Main)
    MoonLight:ResizeEnabled(MainHeader, Main)

    ScreenGui.Parent = game.CoreGui
    ScreenGui.Name = LibName
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false
    ScreenGui.IgnoreGuiInset = true

    Main.Name = "Main"
    Main.Parent = ScreenGui
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = themeList.Background
    Main.ClipsDescendants = true
    Main.Position = UDim2.new(0.5, 0, -0.5, 0)
    Main.Size = UDim2.new(0, 600, 0, 400)

    Utility:TweenObject(Main, {Position = UDim2.new(0.5, 0, 0.5, 0)}, 0.5, Enum.EasingStyle.Quad)

    MainCorner.CornerRadius = UDim.new(0, 8)
    MainCorner.Parent = Main

    MainHeader.Name = "MainHeader"
    MainHeader.Parent = Main
    MainHeader.BackgroundColor3 = themeList.Header
    MainHeader.Size = UDim2.new(0, 600, 0, 40)
    headerCover.CornerRadius = UDim.new(0, 8)
    headerCover.Parent = MainHeader

    coverup.Name = "coverup"
    coverup.Parent = MainHeader
    coverup.BackgroundColor3 = themeList.Header
    coverup.BorderSizePixel = 0
    coverup.Position = UDim2.new(0, 0, 0.875, 0)
    coverup.Size = UDim2.new(0, 600, 0, 5)

    title.Name = "title"
    title.Parent = MainHeader
    title.BackgroundTransparency = 1
    title.Position = UDim2.new(0.02, 0, 0.25, 0)
    title.Size = UDim2.new(0, 300, 0, 20)
    title.Font = Enum.Font.GothamBold
    title.Text = kavName
    title.TextColor3 = themeList.TextColor
    title.TextSize = 18
    title.TextXAlignment = Enum.TextXAlignment.Left

    close.Name = "close"
    close.Parent = MainHeader
    close.BackgroundTransparency = 1
    close.Position = UDim2.new(0.95, -25, 0.25, 0)
    close.Size = UDim2.new(0, 25, 0, 25)
    close.Image = "rbxassetid://3926305904"
    close.ImageRectOffset = Vector2.new(284, 4)
    close.ImageRectSize = Vector2.new(24, 24)
    close.MouseButton1Click:Connect(function()
        Utility:TweenObject(close, {ImageTransparency = 1}, 0.2)
        wait(0.2)
        Utility:TweenObject(Main, {Position = UDim2.new(0.5, 0, -0.5, 0)}, 0.5, Enum.EasingStyle.Quad)
        wait(0.5)
        ScreenGui:Destroy()
    end)

    minimize.Name = "minimize"
    minimize.Parent = MainHeader
    minimize.BackgroundTransparency = 1
    minimize.Position = UDim2.new(0.95, -55, 0.25, 0)
    minimize.Size = UDim2.new(0, 25, 0, 25)
    minimize.Image = "rbxassetid://3926305904"
    minimize.ImageRectOffset = Vector2.new(964, 204)
    minimize.ImageRectSize = Vector2.new(24, 24)
    minimize.MouseButton1Click:Connect(function()
        MoonLight:MinimizeUI()
    end)

    MainSide.Name = "MainSide"
    MainSide.Parent = Main
    MainSide.BackgroundColor3 = themeList.Header
    MainSide.Position = UDim2.new(0, 0, 0.1, 0)
    MainSide.Size = UDim2.new(0, 180, 0, 360)
    sideCorner.CornerRadius = UDim.new(0, 8)
    sideCorner.Parent = MainSide

    coverup_2.Name = "coverup"
    coverup_2.Parent = MainSide
    coverup_2.BackgroundColor3 = themeList.Header
    coverup_2.BorderSizePixel = 0
    coverup_2.Position = UDim2.new(0.95, 0, 0, 0)
    coverup_2.Size = UDim2.new(0, 5, 0, 360)

    tabFrames.Name = "tabFrames"
    tabFrames.Parent = MainSide
    tabFrames.BackgroundTransparency = 1
    tabFrames.Position = UDim2.new(0.05, 0, 0.02, 0)
    tabFrames.Size = UDim2.new(0, 170, 0, 350)

    tabListing.Name = "tabListing"
    tabListing.Parent = tabFrames
    tabListing.SortOrder = Enum.SortOrder.LayoutOrder
    tabListing.Padding = UDim.new(0, 5)

    pages.Name = "pages"
    pages.Parent = Main
    pages.BackgroundTransparency = 1
    pages.Position = UDim2.new(0.3, 0, 0.1, 0)
    pages.Size = UDim2.new(0, 420, 0, 360)

    Pages.Name = "Pages"
    Pages.Parent = pages

    infoContainer.Name = "infoContainer"
    infoContainer.Parent = Main
    infoContainer.BackgroundTransparency = 1
    infoContainer.Position = UDim2.new(0.3, 0, 0.9, 0)
    infoContainer.Size = UDim2.new(0, 420, 0, 40)

    blurFrame.Name = "blurFrame"
    blurFrame.Parent = pages
    blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    blurFrame.BackgroundTransparency = 1
    blurFrame.Size = UDim2.new(0, 420, 0, 360)
    blurFrame.ZIndex = 999

    coroutine.wrap(function()
        while wait() do
            Main.BackgroundColor3 = themeList.Background
            MainHeader.BackgroundColor3 = themeList.Header
            MainSide.BackgroundColor3 = themeList.Header
            coverup_2.BackgroundColor3 = themeList.Header
            coverup.BackgroundColor3 = themeList.Header
            title.TextColor3 = themeList.TextColor
        end
    end)()

    function MoonLight:ChangeColor(prope, color)
        if prope == "Background" then
            themeList.Background = color
        elseif prope == "SchemeColor" then
            themeList.SchemeColor = color
        elseif prope == "Header" then
            themeList.Header = color
        elseif prope == "TextColor" then
            themeList.TextColor = color
        elseif prope == "ElementColor" then
            themeList.ElementColor = color
        end
    end

    local Tabs = {}
    local first = true

    function Tabs:NewTab(tabName)
        tabName = tabName or "Tab"
        local tabButton = Instance.new("TextButton")
        local UICorner = Instance.new("UICorner")
        local page = Instance.new("ScrollingFrame")
        local pageListing = Instance.new("UIListLayout")

        local function UpdateSize()
            local cS = pageListing.AbsoluteContentSize
            Utility:TweenObject(page, {CanvasSize = UDim2.new(0, cS.X, 0, cS.Y)}, 0.15)
        end

        page.Name = "Page"
        page.Parent = Pages
        page.Active = true
        page.BackgroundColor3 = themeList.Background
        page.BorderSizePixel = 0
        page.Size = UDim2.new(1, 0, 1, 0)
        page.ScrollBarThickness = 4
        page.Visible = false
        page.ScrollBarImageColor3 = themeList.SchemeColor

        pageListing.Name = "pageListing"
        pageListing.Parent = page
        pageListing.SortOrder = Enum.SortOrder.LayoutOrder
        pageListing.Padding = UDim.new(0, 5)

        tabButton.Name = tabName.."TabButton"
        tabButton.Parent = tabFrames
        tabButton.BackgroundColor3 = themeList.SchemeColor
        tabButton.Size = UDim2.new(0, 170, 0, 35)
        tabButton.AutoButtonColor = false
        tabButton.Font = Enum.Font.GothamBold
        tabButton.Text = tabName
        tabButton.TextColor3 = themeList.TextColor
        tabButton.TextSize = 16
        tabButton.BackgroundTransparency = 1

        if first then
            first = false
            page.Visible = true
            tabButton.BackgroundTransparency = 0
            UpdateSize()
        else
            page.Visible = false
            tabButton.BackgroundTransparency = 1
        end

        UICorner.CornerRadius = UDim.new(0, 6)
        UICorner.Parent = tabButton

        tabButton.MouseButton1Click:Connect(function()
            UpdateSize()
            for i, v in next, Pages:GetChildren() do
                v.Visible = false
            end
            page.Visible = true
            for i, v in next, tabFrames:GetChildren() do
                if v:IsA("TextButton") then
                    Utility:TweenObject(v, {BackgroundTransparency = 1, TextColor3 = themeList.TextColor}, 0.2)
                end
            end
            Utility:TweenObject(tabButton, {BackgroundTransparency = 0, TextColor3 = themeList.TextColor}, 0.2)
        end)

        local Sections = {}
        local focusing = false
        local viewDe = false

        coroutine.wrap(function()
            while wait() do
                page.BackgroundColor3 = themeList.Background
                page.ScrollBarImageColor3 = themeList.SchemeColor
                tabButton.TextColor3 = themeList.TextColor
                tabButton.BackgroundColor3 = themeList.SchemeColor
            end
        end)()

        function Sections:NewSection(secName, hidden)
            secName = secName or "Section"
            local sectionFrame = Instance.new("Frame")
            local sectionlistoknvm = Instance.new("UIListLayout")
            local sectionHead = Instance.new("Frame")
            local sHeadCorner = Instance.new("UICorner")
            local sectionName = Instance.new("TextLabel")
            local sectionInners = Instance.new("Frame")
            local sectionElListing = Instance.new("UIListLayout")

            hidden = hidden or false
            sectionHead.Visible = not hidden

            sectionFrame.Name = "sectionFrame"
            sectionFrame.Parent = page
            sectionFrame.BackgroundColor3 = themeList.Background
            sectionFrame.BorderSizePixel = 0

            sectionlistoknvm.Name = "sectionlistoknvm"
            sectionlistoknvm.Parent = sectionFrame
            sectionlistoknvm.SortOrder = Enum.SortOrder.LayoutOrder
            sectionlistoknvm.Padding = UDim.new(0, 5)

            sectionHead.Name = "sectionHead"
            sectionHead.Parent = sectionFrame
            sectionHead.BackgroundColor3 = themeList.SchemeColor
            sectionHead.Size = UDim2.new(0, 410, 0, 35)

            sHeadCorner.CornerRadius = UDim.new(0, 6)
            sHeadCorner.Parent = sectionHead

            sectionName.Name = "sectionName"
            sectionName.Parent = sectionHead
            sectionName.BackgroundTransparency = 1
            sectionName.Position = UDim2.new(0.02, 0, 0, 0)
            sectionName.Size = UDim2.new(0.98, 0, 1, 0)
            sectionName.Font = Enum.Font.GothamBold
            sectionName.Text = secName
            sectionName.TextColor3 = themeList.TextColor
            sectionName.TextSize = 16
            sectionName.TextXAlignment = Enum.TextXAlignment.Left

            sectionInners.Name = "sectionInners"
            sectionInners.Parent = sectionFrame
            sectionInners.BackgroundTransparency = 1
            sectionInners.Position = UDim2.new(0, 0, 0.2, 0)

            sectionElListing.Name = "sectionElListing"
            sectionElListing.Parent = sectionInners
            sectionElListing.SortOrder = Enum.SortOrder.LayoutOrder
            sectionElListing.Padding = UDim.new(0, 4)

            coroutine.wrap(function()
                while wait() do
                    sectionFrame.BackgroundColor3 = themeList.Background
                    sectionHead.BackgroundColor3 = themeList.SchemeColor
                    sectionName.TextColor3 = themeList.TextColor
                end
            end)()

            local function updateSectionFrame()
                local innerSc = sectionElListing.AbsoluteContentSize
                sectionInners.Size = UDim2.new(1, 0, 0, innerSc.Y)
                local frameSc = sectionlistoknvm.AbsoluteContentSize
                sectionFrame.Size = UDim2.new(0, 410, 0, frameSc.Y)
            end
            updateSectionFrame()
            UpdateSize()

            local Elements = {}

            function Elements:NewButton(bname, tipINf, callback)
                bname = bname or "Button"
                tipINf = tipINf or "Click to trigger action"
                callback = callback or function() end
                local ButtonFunction = {}

                local buttonElement = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner")
                local btnInfo = Instance.new("TextLabel")
                local viewInfo = Instance.new("ImageButton")
                local touch = Instance.new("ImageLabel")
                local Sample = Instance.new("ImageLabel")

                buttonElement.Name = bname
                buttonElement.Parent = sectionInners
                buttonElement.BackgroundColor3 = themeList.ElementColor
                buttonElement.Size = UDim2.new(0, 410, 0, 35)
                buttonElement.AutoButtonColor = false
                buttonElement.Font = Enum.Font.SourceSans
                buttonElement.Text = ""
                buttonElement.TextColor3 = Color3.fromRGB(0, 0, 0)
                buttonElement.TextSize = 14

                UICorner.CornerRadius = UDim.new(0, 6)
                UICorner.Parent = buttonElement

                viewInfo.Name = "viewInfo"
                viewInfo.Parent = buttonElement
                viewInfo.BackgroundTransparency = 1
                viewInfo.Position = UDim2.new(0.93, 0, 0.2, 0)
                viewInfo.Size = UDim2.new(0, 25, 0, 25)
                viewInfo.ZIndex = 2
                viewInfo.Image = "rbxassetid://3926305904"
                viewInfo.ImageColor3 = themeList.SchemeColor
                viewInfo.ImageRectOffset = Vector2.new(764, 764)
                viewInfo.ImageRectSize = Vector2.new(36, 36)

                Sample.Name = "Sample"
                Sample.Parent = buttonElement
                Sample.BackgroundTransparency = 1
                Sample.Image = "http://www.roblox.com/asset/?id=4560909609"
                Sample.ImageColor3 = themeList.SchemeColor
                Sample.ImageTransparency = 0.5

                local moreInfo = Instance.new("TextLabel")
                local UICornerInfo = Instance.new("UICorner")
                moreInfo.Name = "TipMore"
                moreInfo.Parent = infoContainer
                moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                moreInfo.Position = UDim2.new(0, 0, 2, 0)
                moreInfo.Size = UDim2.new(0, 410, 0, 40)
                moreInfo.ZIndex = 9
                moreInfo.Font = Enum.Font.GothamBold
                moreInfo.Text = "  "..tipINf
                moreInfo.TextColor3 = themeList.TextColor
                moreInfo.TextSize = 16
                moreInfo.TextXAlignment = Enum.TextXAlignment.Left
                UICornerInfo.CornerRadius = UDim.new(0, 6)
                UICornerInfo.Parent = moreInfo

                touch.Name = "touch"
                touch.Parent = buttonElement
                touch.BackgroundTransparency = 1
                touch.Position = UDim2.new(0.02, 0, 0.2, 0)
                touch.Size = UDim2.new(0, 25, 0, 25)
                touch.Image = "rbxassetid://3926305904"
                touch.ImageColor3 = themeList.SchemeColor
                touch.ImageRectOffset = Vector2.new(84, 204)
                touch.ImageRectSize = Vector2.new(36, 36)

                btnInfo.Name = "btnInfo"
                btnInfo.Parent = buttonElement
                btnInfo.BackgroundTransparency = 1
                btnInfo.Position = UDim2.new(0.1, 0, 0.3, 0)
                btnInfo.Size = UDim2.new(0, 350, 0, 16)
                btnInfo.Font = Enum.Font.GothamBold
                btnInfo.Text = bname
                btnInfo.TextColor3 = themeList.TextColor
                btnInfo.TextSize = 16
                btnInfo.TextXAlignment = Enum.TextXAlignment.Left

                updateSectionFrame()
                UpdateSize()

                local ms = game.Players.LocalPlayer:GetMouse()

                buttonElement.MouseButton1Click:Connect(function()
                    if not focusing then
                        callback()
                        local c = Sample:Clone()
                        c.Parent = buttonElement
                        local x, y = (ms.X - c.AbsolutePosition.X), (ms.Y - c.AbsolutePosition.Y)
                        c.Position = UDim2.new(0, x, 0, y)
                        local len, size = 0.4, buttonElement.AbsoluteSize.X * 1.5
                        c:TweenSizeAndPosition(UDim2.new(0, size, 0, size), UDim2.new(0.5, -size / 2, 0.5, -size / 2), 'Out', 'Sine', len, true)
                        for i = 1, 10 do
                            c.ImageTransparency = c.ImageTransparency + 0.1
                            wait(len / 10)
                        end
                        c:Destroy()
                    else
                        for i, v in next, infoContainer:GetChildren() do
                            Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            focusing = false
                        end
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                    end
                end)

                local hovering = false
                buttonElement.MouseEnter:Connect(function()
                    if not focusing then
                        Utility:TweenObject(buttonElement, {BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 10, themeList.ElementColor.g * 255 + 10, themeList.ElementColor.b * 255 + 10)}, 0.1)
                        hovering = true
                    end
                end)
                buttonElement.MouseLeave:Connect(function()
                    if not focusing then
                        Utility:TweenObject(buttonElement, {BackgroundColor3 = themeList.ElementColor}, 0.1)
                        hovering = false
                    end
                end)

                viewInfo.MouseButton1Click:Connect(function()
                    if not viewDe then
                        viewDe = true
                        focusing = true
                        for i, v in next, infoContainer:GetChildren() do
                            if v ~= moreInfo then
                                Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            end
                        end
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 0, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 0.4}, 0.2)
                        Utility:TweenObject(buttonElement, {BackgroundColor3 = themeList.ElementColor}, 0.2)
                        wait(1.5)
                        focusing = false
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                        viewDe = false
                    end
                end)

                coroutine.wrap(function()
                    while wait() do
                        if not hovering then
                            buttonElement.BackgroundColor3 = themeList.ElementColor
                        end
                        viewInfo.ImageColor3 = themeList.SchemeColor
                        Sample.ImageColor3 = themeList.SchemeColor
                        moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                        moreInfo.TextColor3 = themeList.TextColor
                        touch.ImageColor3 = themeList.SchemeColor
                        btnInfo.TextColor3 = themeList.TextColor
                    end
                end)()

                function ButtonFunction:UpdateButton(newTitle)
                    btnInfo.Text = newTitle
                end
                return ButtonFunction
            end

            function Elements:NewTextBox(tname, tTip, callback)
                tname = tname or "Textbox"
                tTip = tTip or "Enter text here"
                callback = callback or function() end
                local textboxElement = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner")
                local viewInfo = Instance.new("ImageButton")
                local write = Instance.new("ImageLabel")
                local TextBox = Instance.new("TextBox")
                local UICorner_2 = Instance.new("UICorner")
                local togName = Instance.new("TextLabel")

                textboxElement.Name = "textboxElement"
                textboxElement.Parent = sectionInners
                textboxElement.BackgroundColor3 = themeList.ElementColor
                textboxElement.Size = UDim2.new(0, 410, 0, 35)
                textboxElement.AutoButtonColor = false
                textboxElement.Font = Enum.Font.SourceSans
                textboxElement.Text = ""
                textboxElement.TextColor3 = Color3.fromRGB(0, 0, 0)
                textboxElement.TextSize = 14

                UICorner.CornerRadius = UDim.new(0, 6)
                UICorner.Parent = textboxElement

                viewInfo.Name = "viewInfo"
                viewInfo.Parent = textboxElement
                viewInfo.BackgroundTransparency = 1
                viewInfo.Position = UDim2.new(0.93, 0, 0.2, 0)
                viewInfo.Size = UDim2.new(0, 25, 0, 25)
                viewInfo.ZIndex = 2
                viewInfo.Image = "rbxassetid://3926305904"
                viewInfo.ImageColor3 = themeList.SchemeColor
                viewInfo.ImageRectOffset = Vector2.new(764, 764)
                viewInfo.ImageRectSize = Vector2.new(36, 36)

                write.Name = "write"
                write.Parent = textboxElement
                write.BackgroundTransparency = 1
                write.Position = UDim2.new(0.02, 0, 0.2, 0)
                write.Size = UDim2.new(0, 25, 0, 25)
                write.Image = "rbxassetid://3926305904"
                write.ImageColor3 = themeList.SchemeColor
                write.ImageRectOffset = Vector2.new(324, 604)
                write.ImageRectSize = Vector2.new(36, 36)

                TextBox.Parent = textboxElement
                TextBox.BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 - 10, themeList.ElementColor.g * 255 - 10, themeList.ElementColor.b * 255 - 10)
                TextBox.BorderSizePixel = 0
                TextBox.Position = UDim2.new(0.5, 0, 0.2, 0)
                TextBox.Size = UDim2.new(0, 180, 0, 20)
                TextBox.ZIndex = 99
                TextBox.ClearTextOnFocus = false
                TextBox.Font = Enum.Font.Gotham
                TextBox.PlaceholderColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 20, themeList.SchemeColor.g * 255 - 20, themeList.SchemeColor.b * 255 - 20)
                TextBox.PlaceholderText = "Type here!"
                TextBox.Text = ""
                TextBox.TextColor3 = themeList.SchemeColor
                TextBox.TextSize = 14

                UICorner_2.CornerRadius = UDim.new(0, 4)
                UICorner_2.Parent = TextBox

                togName.Name = "togName"
                togName.Parent = textboxElement
                togName.BackgroundTransparency = 1
                togName.Position = UDim2.new(0.1, 0, 0.3, 0)
                togName.Size = UDim2.new(0, 160, 0, 16)
                togName.Font = Enum.Font.GothamBold
                togName.Text = tname
                togName.TextColor3 = themeList.TextColor
                togName.TextSize = 16
                togName.TextXAlignment = Enum.TextXAlignment.Left

                local moreInfo = Instance.new("TextLabel")
                local UICorner = Instance.new("UICorner")
                moreInfo.Name = "TipMore"
                moreInfo.Parent = infoContainer
                moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                moreInfo.Position = UDim2.new(0, 0, 2, 0)
                moreInfo.Size = UDim2.new(0, 410, 0, 40)
                moreInfo.ZIndex = 9
                moreInfo.Font = Enum.Font.GothamBold
                moreInfo.Text = "  "..tTip
                moreInfo.TextColor3 = themeList.TextColor
                moreInfo.TextSize = 16
                moreInfo.TextXAlignment = Enum.TextXAlignment.Left
                UICorner.CornerRadius = UDim.new(0, 6)
                UICorner.Parent = moreInfo

                updateSectionFrame()
                UpdateSize()

                local btn = textboxElement
                local infBtn = viewInfo

                btn.MouseButton1Click:Connect(function()
                    if focusing then
                        for i, v in next, infoContainer:GetChildren() do
                            Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            focusing = false
                        end
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                    end
                end)

                local hovering = false
                btn.MouseEnter:Connect(function()
                    if not focusing then
                        Utility:TweenObject(btn, {BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 10, themeList.ElementColor.g * 255 + 10, themeList.ElementColor.b * 255 + 10)}, 0.1)
                        hovering = true
                    end
                end)
                btn.MouseLeave:Connect(function()
                    if not focusing then
                        Utility:TweenObject(btn, {BackgroundColor3 = themeList.ElementColor}, 0.1)
                        hovering = false
                    end
                end)

                TextBox.FocusLost:Connect(function(EnterPressed)
                    if focusing then
                        for i, v in next, infoContainer:GetChildren() do
                            Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            focusing = false
                        end
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                    end
                    if EnterPressed then
                        callback(TextBox.Text)
                        wait(0.18)
                        TextBox.Text = ""
                    end
                end)

                viewInfo.MouseButton1Click:Connect(function()
                    if not viewDe then
                        viewDe = true
                        focusing = true
                        for i, v in next, infoContainer:GetChildren() do
                            if v ~= moreInfo then
                                Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            end
                        end
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 0, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 0.4}, 0.2)
                        Utility:TweenObject(btn, {BackgroundColor3 = themeList.ElementColor}, 0.2)
                        wait(1.5)
                        focusing = false
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                        viewDe = false
                    end
                end)

                coroutine.wrap(function()
                    while wait() do
                        if not hovering then
                            textboxElement.BackgroundColor3 = themeList.ElementColor
                        end
                        TextBox.BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 - 10, themeList.ElementColor.g * 255 - 10, themeList.ElementColor.b * 255 - 10)
                        viewInfo.ImageColor3 = themeList.SchemeColor
                        moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                        moreInfo.TextColor3 = themeList.TextColor
                        write.ImageColor3 = themeList.SchemeColor
                        togName.TextColor3 = themeList.TextColor
                        TextBox.PlaceholderColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 20, themeList.SchemeColor.g * 255 - 20, themeList.SchemeColor.b * 255 - 20)
                        TextBox.TextColor3 = themeList.SchemeColor
                    end
                end)()
            end

            function Elements:NewToggle(tname, nTip, callback)
                local TogFunction = {}
                tname = tname or "Toggle"
                nTip = nTip or "Toggle state"
                callback = callback or function() end
                local toggled = false

                local toggleElement = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner")
                local toggleDisabled = Instance.new("ImageLabel")
                local toggleEnabled = Instance.new("ImageLabel")
                local togName = Instance.new("TextLabel")
                local viewInfo = Instance.new("ImageButton")
                local Sample = Instance.new("ImageLabel")

                toggleElement.Name = "toggleElement"
                toggleElement.Parent = sectionInners
                toggleElement.BackgroundColor3 = themeList.ElementColor
                toggleElement.Size = UDim2.new(0, 410, 0, 35)
                toggleElement.AutoButtonColor = false
                toggleElement.Font = Enum.Font.SourceSans
                toggleElement.Text = ""
                toggleElement.TextColor3 = Color3.fromRGB(0, 0, 0)
                toggleElement.TextSize = 14

                UICorner.CornerRadius = UDim.new(0, 6)
                UICorner.Parent = toggleElement

                toggleDisabled.Name = "toggleDisabled"
                toggleDisabled.Parent = toggleElement
                toggleDisabled.BackgroundTransparency = 1
                toggleDisabled.Position = UDim2.new(0.02, 0, 0.2, 0)
                toggleDisabled.Size = UDim2.new(0, 25, 0, 25)
                toggleDisabled.Image = "rbxassetid://3926309567"
                toggleDisabled.ImageColor3 = themeList.SchemeColor
                toggleDisabled.ImageRectOffset = Vector2.new(628, 420)
                toggleDisabled.ImageRectSize = Vector2.new(48, 48)

                toggleEnabled.Name = "toggleEnabled"
                toggleEnabled.Parent = toggleElement
                toggleEnabled.BackgroundTransparency = 1
                toggleEnabled.Position = UDim2.new(0.02, 0, 0.2, 0)
                toggleEnabled.Size = UDim2.new(0, 25, 0, 25)
                toggleEnabled.Image = "rbxassetid://3926309567"
                toggleEnabled.ImageColor3 = themeList.SchemeColor
                toggleEnabled.ImageRectOffset = Vector2.new(784, 420)
                toggleEnabled.ImageRectSize = Vector2.new(48, 48)
                toggleEnabled.ImageTransparency = 1

                togName.Name = "togName"
                togName.Parent = toggleElement
                togName.BackgroundTransparency = 1
                togName.Position = UDim2.new(0.1, 0, 0.3, 0)
                togName.Size = UDim2.new(0, 350, 0, 16)
                togName.Font = Enum.Font.GothamBold
                togName.Text = tname
                togName.TextColor3 = themeList.TextColor
                togName.TextSize = 16
                togName.TextXAlignment = Enum.TextXAlignment.Left

                viewInfo.Name = "viewInfo"
                viewInfo.Parent = toggleElement
                viewInfo.BackgroundTransparency = 1
                viewInfo.Position = UDim2.new(0.93, 0, 0.2, 0)
                viewInfo.Size = UDim2.new(0, 25, 0, 25)
                viewInfo.ZIndex = 2
                viewInfo.Image = "rbxassetid://3926305904"
                viewInfo.ImageColor3 = themeList.SchemeColor
                viewInfo.ImageRectOffset = Vector2.new(764, 764)
                viewInfo.ImageRectSize = Vector2.new(36, 36)

                Sample.Name = "Sample"
                Sample.Parent = toggleElement
                Sample.BackgroundTransparency = 1
                Sample.Image = "http://www.roblox.com/asset/?id=4560909609"
                Sample.ImageColor3 = themeList.SchemeColor
                Sample.ImageTransparency = 0.5

                local moreInfo = Instance.new("TextLabel")
                local UICorner = Instance.new("UICorner")
                moreInfo.Name = "TipMore"
                moreInfo.Parent = infoContainer
                moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                moreInfo.Position = UDim2.new(0, 0, 2, 0)
                moreInfo.Size = UDim2.new(0, 410, 0, 40)
                moreInfo.ZIndex = 9
                moreInfo.Font = Enum.Font.GothamBold
                moreInfo.Text = "  "..nTip
                moreInfo.TextColor3 = themeList.TextColor
                moreInfo.TextSize = 16
                moreInfo.TextXAlignment = Enum.TextXAlignment.Left
                UICorner.CornerRadius = UDim.new(0, 6)
                UICorner.Parent = moreInfo

                local ms = game.Players.LocalPlayer:GetMouse()

                updateSectionFrame()
                UpdateSize()

                toggleElement.MouseButton1Click:Connect(function()
                    if not focusing then
                        toggled = not toggled
                        if toggled then
                            Utility:TweenObject(toggleEnabled, {ImageTransparency = 0}, 0.2)
                            Utility:TweenObject(toggleDisabled, {ImageTransparency = 1}, 0.2)
                        else
                            Utility:TweenObject(toggleEnabled, {ImageTransparency = 1}, 0.2)
                            Utility:TweenObject(toggleDisabled, {ImageTransparency = 0}, 0.2)
                        end
                        local c = Sample:Clone()
                        c.Parent = toggleElement
                        local x, y = (ms.X - c.AbsolutePosition.X), (ms.Y - c.AbsolutePosition.Y)
                        c.Position = UDim2.new(0, x, 0, y)
                        local len, size = 0.4, toggleElement.AbsoluteSize.X * 1.5
                        c:TweenSizeAndPosition(UDim2.new(0, size, 0, size), UDim2.new(0.5, -size / 2, 0.5, -size / 2), 'Out', 'Sine', len, true)
                        for i = 1, 10 do
                            c.ImageTransparency = c.ImageTransparency + 0.1
                            wait(len / 10)
                        end
                        c:Destroy()
                        pcall(callback, toggled)
                    else
                        for i, v in next, infoContainer:GetChildren() do
                            Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            focusing = false
                        end
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                    end
                end)

                local hovering = false
                toggleElement.MouseEnter:Connect(function()
                    if not focusing then
                        Utility:TweenObject(toggleElement, {BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 10, themeList.ElementColor.g * 255 + 10, themeList.ElementColor.b * 255 + 10)}, 0.1)
                        hovering = true
                    end
                end)
                toggleElement.MouseLeave:Connect(function()
                    if not focusing then
                        Utility:TweenObject(toggleElement, {BackgroundColor3 = themeList.ElementColor}, 0.1)
                        hovering = false
                    end
                end)

                viewInfo.MouseButton1Click:Connect(function()
                    if not viewDe then
                        viewDe = true
                        focusing = true
                        for i, v in next, infoContainer:GetChildren() do
                            if v ~= moreInfo then
                                Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            end
                        end
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 0, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 0.4}, 0.2)
                        Utility:TweenObject(toggleElement, {BackgroundColor3 = themeList.ElementColor}, 0.2)
                        wait(1.5)
                        focusing = false
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                        viewDe = false
                    end
                end)

                coroutine.wrap(function()
                    while wait() do
                        if not hovering then
                            toggleElement.BackgroundColor3 = themeList.ElementColor
                        end
                        toggleDisabled.ImageColor3 = themeList.SchemeColor
                        toggleEnabled.ImageColor3 = themeList.SchemeColor
                        togName.TextColor3 = themeList.TextColor
                        viewInfo.ImageColor3 = themeList.SchemeColor
                        Sample.ImageColor3 = themeList.SchemeColor
                        moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                        moreInfo.TextColor3 = themeList.TextColor
                    end
                end)()

                function TogFunction:UpdateToggle(newText, isTogOn)
                    if newText then
                        togName.Text = newText
                    end
                    if isTogOn then
                        toggled = true
                        Utility:TweenObject(toggleEnabled, {ImageTransparency = 0}, 0.2)
                        Utility:TweenObject(toggleDisabled, {ImageTransparency = 1}, 0.2)
                        pcall(callback, toggled)
                    else
                        toggled = false
                        Utility:TweenObject(toggleEnabled, {ImageTransparency = 1}, 0.2)
                        Utility:TweenObject(toggleDisabled, {ImageTransparency = 0}, 0.2)
                        pcall(callback, toggled)
                    end
                end
                return TogFunction
            end

            function Elements:NewSlider(slidInf, slidTip, maxvalue, minvalue, callback)
                slidInf = slidInf or "Slider"
                slidTip = slidTip or "Adjust value"
                maxvalue = maxvalue or 100
                minvalue = minvalue or 0
                callback = callback or function() end

                local sliderElement = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner")
                local togName = Instance.new("TextLabel")
                local viewInfo = Instance.new("ImageButton")
                local sliderBtn = Instance.new("TextButton")
                local UICorner_2 = Instance.new("UICorner")
                local sliderDrag = Instance.new("Frame")
                local UICorner_3 = Instance.new("UICorner")
                local write = Instance.new("ImageLabel")
                local val = Instance.new("TextLabel")

                sliderElement.Name = "sliderElement"
                sliderElement.Parent = sectionInners
                sliderElement.BackgroundColor3 = themeList.ElementColor
                sliderElement.Size = UDim2.new(0, 410, 0, 35)
                sliderElement.AutoButtonColor = false
                sliderElement.Font = Enum.Font.SourceSans
                sliderElement.Text = ""
                sliderElement.TextColor3 = Color3.fromRGB(0, 0, 0)
                sliderElement.TextSize = 14

                UICorner.CornerRadius = UDim.new(0, 6)
                UICorner.Parent = sliderElement

                togName.Name = "togName"
                togName.Parent = sliderElement
                togName.BackgroundTransparency = 1
                togName.Position = UDim2.new(0.1, 0, 0.3, 0)
                togName.Size = UDim2.new(0, 160, 0, 16)
                togName.Font = Enum.Font.GothamBold
                togName.Text = slidInf
                togName.TextColor3 = themeList.TextColor
                togName.TextSize = 16
                togName.TextXAlignment = Enum.TextXAlignment.Left

                viewInfo.Name = "viewInfo"
                viewInfo.Parent = sliderElement
                viewInfo.BackgroundTransparency = 1
                viewInfo.Position = UDim2.new(0.93, 0, 0.2, 0)
                viewInfo.Size = UDim2.new(0, 25, 0, 25)
                viewInfo.ZIndex = 2
                viewInfo.Image = "rbxassetid://3926305904"
                viewInfo.ImageColor3 = themeList.SchemeColor
                viewInfo.ImageRectOffset = Vector2.new(764, 764)
                viewInfo.ImageRectSize = Vector2.new(36, 36)

                sliderBtn.Name = "sliderBtn"
                sliderBtn.Parent = sliderElement
                sliderBtn.BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 10, themeList.ElementColor.g * 255 + 10, themeList.ElementColor.b * 255 + 10)
                sliderBtn.BorderSizePixel = 0
                sliderBtn.Position = UDim2.new(0.5, 0, 0.65, 0)
                sliderBtn.Size = UDim2.new(0, 180, 0, 8)
                sliderBtn.AutoButtonColor = false
                sliderBtn.Font = Enum.Font.SourceSans
                sliderBtn.Text = ""
                sliderBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
                sliderBtn.TextSize = 14

                UICorner_2.CornerRadius = UDim.new(0, 4)
                UICorner_2.Parent = sliderBtn

                sliderDrag.Name = "sliderDrag"
                sliderDrag.Parent = sliderBtn
                sliderDrag.BackgroundColor3 = themeList.SchemeColor
                sliderDrag.BorderSizePixel = 0
                sliderDrag.Size = UDim2.new(0, 0, 1, 0)

                UICorner_3.CornerRadius = UDim.new(0, 4)
                UICorner_3.Parent = sliderDrag

                write.Name = "write"
                write.Parent = sliderElement
                write.BackgroundTransparency = 1
                write.Position = UDim2.new(0.02, 0, 0.2, 0)
                write.Size = UDim2.new(0, 25, 0, 25)
                write.Image = "rbxassetid://3926307971"
                write.ImageColor3 = themeList.SchemeColor
                write.ImageRectOffset = Vector2.new(404, 164)
                write.ImageRectSize = Vector2.new(36, 36)

                val.Name = "val"
                val.Parent = sliderElement
                val.BackgroundTransparency = 1
                val.Position = UDim2.new(0.35, 0, 0.3, 0)
                val.Size = UDim2.new(0, 50, 0, 16)
                val.Font = Enum.Font.GothamBold
                val.Text = tostring(minvalue)
                val.TextColor3 = themeList.TextColor
                val.TextSize = 16
                val.TextXAlignment = Enum.TextXAlignment.Right

                local moreInfo = Instance.new("TextLabel")
                local UICorner = Instance.new("UICorner")
                moreInfo.Name = "TipMore"
                moreInfo.Parent = infoContainer
                moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                moreInfo.Position = UDim2.new(0, 0, 2, 0)
                moreInfo.Size = UDim2.new(0, 410, 0, 40)
                moreInfo.ZIndex = 9
                moreInfo.Font = Enum.Font.GothamBold
                moreInfo.Text = "  "..slidTip
                moreInfo.TextColor3 = themeList.TextColor
                moreInfo.TextSize = 16
                moreInfo.TextXAlignment = Enum.TextXAlignment.Left
                UICorner.CornerRadius = UDim.new(0, 6)
                UICorner.Parent = moreInfo

                updateSectionFrame()
                UpdateSize()

                local mouse = game.Players.LocalPlayer:GetMouse()
                local uis = game:GetService("UserInputService")
                local btn = sliderElement

                local hovering = false
                btn.MouseEnter:Connect(function()
                    if not focusing then
                        Utility:TweenObject(btn, {BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 10, themeList.ElementColor.g * 255 + 10, themeList.ElementColor.b * 255 + 10)}, 0.1)
                        hovering = true
                    end
                end)
                btn.MouseLeave:Connect(function()
                    if not focusing then
                        Utility:TweenObject(btn, {BackgroundColor3 = themeList.ElementColor}, 0.1)
                        hovering = false
                    end
                end)

                local Value
                sliderBtn.MouseButton1Down:Connect(function()
                    if not focusing then
                        Utility:TweenObject(val, {TextTransparency = 0}, 0.1)
                        Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 180) * sliderDrag.AbsoluteSize.X) + tonumber(minvalue)) or 0
                        pcall(callback, Value)
                        Utility:TweenObject(sliderDrag, {Size = UDim2.new(0, math.clamp(mouse.X - sliderDrag.AbsolutePosition.X, 0, 180), 0, 8)}, 0.05)
                        local moveconnection = mouse.Move:Connect(function()
                            val.Text = Value
                            Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 180) * sliderDrag.AbsoluteSize.X) + tonumber(minvalue))
                            pcall(callback, Value)
                            Utility:TweenObject(sliderDrag, {Size = UDim2.new(0, math.clamp(mouse.X - sliderDrag.AbsolutePosition.X, 0, 180), 0, 8)}, 0.05)
                        end)
                        local releaseconnection = uis.InputEnded:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                                Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 180) * sliderDrag.AbsoluteSize.X) + tonumber(minvalue))
                                pcall(callback, Value)
                                val.Text = Value
                                Utility:TweenObject(val, {TextTransparency = 0.5}, 0.1)
                                Utility:TweenObject(sliderDrag, {Size = UDim2.new(0, math.clamp(mouse.X - sliderDrag.AbsolutePosition.X, 0, 180), 0, 8)}, 0.05)
                                moveconnection:Disconnect()
                                releaseconnection:Disconnect()
                            end
                        end)
                    else
                        for i, v in next, infoContainer:GetChildren() do
                            Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            focusing = false
                        end
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                    end
                end)

                viewInfo.MouseButton1Click:Connect(function()
                    if not viewDe then
                        viewDe = true
                        focusing = true
                        for i, v in next, infoContainer:GetChildren() do
                            if v ~= moreInfo then
                                Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            end
                        end
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 0, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 0.4}, 0.2)
                        Utility:TweenObject(btn, {BackgroundColor3 = themeList.ElementColor}, 0.2)
                        wait(1.5)
                        focusing = false
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                        viewDe = false
                    end
                end)

                coroutine.wrap(function()
                    while wait() do
                        if not hovering then
                            sliderElement.BackgroundColor3 = themeList.ElementColor
                        end
                        moreInfo.TextColor3 = themeList.TextColor
                        moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                        val.TextColor3 = themeList.TextColor
                        write.ImageColor3 = themeList.SchemeColor
                        togName.TextColor3 = themeList.TextColor
                        viewInfo.ImageColor3 = themeList.SchemeColor
                        sliderBtn.BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 10, themeList.ElementColor.g * 255 + 10, themeList.ElementColor.b * 255 + 10)
                        sliderDrag.BackgroundColor3 = themeList.SchemeColor
                    end
                end)()
            end

            function Elements:NewDropdown(dropname, dropinf, list, callback)
                local DropFunction = {}
                dropname = dropname or "Dropdown"
                dropinf = dropinf or "Select an option"
                list = list or {}
                callback = callback or function() end
                local opened = false

                local dropFrame = Instance.new("Frame")
                local dropOpen = Instance.new("TextButton")
                local listImg = Instance.new("ImageLabel")
                local itemTextbox = Instance.new("TextLabel")
                local viewInfo = Instance.new("ImageButton")
                local UICorner = Instance.new("UICorner")
                local UIListLayout = Instance.new("UIListLayout")
                local Sample = Instance.new("ImageLabel")

                dropFrame.Name = "dropFrame"
                dropFrame.Parent = sectionInners
                dropFrame.BackgroundColor3 = themeList.Background
                dropFrame.Size = UDim2.new(0, 410, 0, 35)
                dropFrame.ClipsDescendants = true

                dropOpen.Name = "dropOpen"
                dropOpen.Parent = dropFrame
                dropOpen.BackgroundColor3 = themeList.ElementColor
                dropOpen.Size = UDim2.new(0, 410, 0, 35)
                dropOpen.AutoButtonColor = false
                dropOpen.Font = Enum.Font.SourceSans
                dropOpen.Text = ""
                dropOpen.TextColor3 = Color3.fromRGB(0, 0, 0)
                dropOpen.TextSize = 14

                Sample.Name = "Sample"
                Sample.Parent = dropOpen
                Sample.BackgroundTransparency = 1
                Sample.Image = "http://www.roblox.com/asset/?id=4560909609"
                Sample.ImageColor3 = themeList.SchemeColor
                Sample.ImageTransparency = 0.5

                listImg.Name = "listImg"
                listImg.Parent = dropOpen
                listImg.BackgroundTransparency = 1
                listImg.Position = UDim2.new(0.02, 0, 0.2, 0)
                listImg.Size = UDim2.new(0, 25, 0, 25)
                listImg.Image = "rbxassetid://3926305904"
                listImg.ImageColor3 = themeList.SchemeColor
                listImg.ImageRectOffset = Vector2.new(644, 364)
                listImg.ImageRectSize = Vector2.new(36, 36)

                itemTextbox.Name = "itemTextbox"
                itemTextbox.Parent = dropOpen
                itemTextbox.BackgroundTransparency = 1
                itemTextbox.Position = UDim2.new(0.1, 0, 0.3, 0)
                itemTextbox.Size = UDim2.new(0, 350, 0, 16)
                itemTextbox.Font = Enum.Font.GothamBold
                itemTextbox.Text = dropname
                itemTextbox.TextColor3 = themeList.TextColor
                itemTextbox.TextSize = 16
                itemTextbox.TextXAlignment = Enum.TextXAlignment.Left

                viewInfo.Name = "viewInfo"
                viewInfo.Parent = dropOpen
                viewInfo.BackgroundTransparency = 1
                viewInfo.Position = UDim2.new(0.93, 0, 0.2, 0)
                viewInfo.Size = UDim2.new(0, 25, 0, 25)
                viewInfo.ZIndex = 2
                viewInfo.Image = "rbxassetid://3926305904"
                viewInfo.ImageColor3 = themeList.SchemeColor
                viewInfo.ImageRectOffset = Vector2.new(764, 764)
                viewInfo.ImageRectSize = Vector2.new(36, 36)

                UICorner.CornerRadius = UDim.new(0, 6)
                UICorner.Parent = dropOpen

                UIListLayout.Parent = dropFrame
                UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                UIListLayout.Padding = UDim.new(0, 4)

                local moreInfo = Instance.new("TextLabel")
                local UICornerInfo = Instance.new("UICorner")
                moreInfo.Name = "TipMore"
                moreInfo.Parent = infoContainer
                moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                moreInfo.Position = UDim2.new(0, 0, 2, 0)
                moreInfo.Size = UDim2.new(0, 410, 0, 40)
                moreInfo.ZIndex = 9
                moreInfo.Font = Enum.Font.GothamBold
                moreInfo.Text = "  "..dropinf
                moreInfo.TextColor3 = themeList.TextColor
                moreInfo.TextSize = 16
                moreInfo.TextXAlignment = Enum.TextXAlignment.Left
                UICornerInfo.CornerRadius = UDim.new(0, 6)
                UICornerInfo.Parent = moreInfo

                updateSectionFrame()
                UpdateSize()

                local ms = game.Players.LocalPlayer:GetMouse()
                local btn = dropOpen

                dropOpen.MouseButton1Click:Connect(function()
                    if not focusing then
                        opened = not opened
                        local size = opened and UDim2.new(0, 410, 0, UIListLayout.AbsoluteContentSize.Y) or UDim2.new(0, 410, 0, 35)
                        Utility:TweenObject(dropFrame, {Size = size}, 0.2)
                        wait(0.2)
                        updateSectionFrame()
                        UpdateSize()
                        local c = Sample:Clone()
                        c.Parent = btn
                        local x, y = (ms.X - c.AbsolutePosition.X), (ms.Y - c.AbsolutePosition.Y)
                        c.Position = UDim2.new(0, x, 0, y)
                        local len, size = 0.4, btn.AbsoluteSize.X * 1.5
                        c:TweenSizeAndPosition(UDim2.new(0, size, 0, size), UDim2.new(0.5, -size / 2, 0.5, -size / 2), 'Out', 'Sine', len, true)
                        for i = 1, 10 do
                            c.ImageTransparency = c.ImageTransparency + 0.1
                            wait(len / 10)
                        end
                        c:Destroy()
                    else
                        for i, v in next, infoContainer:GetChildren() do
                            Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            focusing = false
                        end
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                    end
                end)

                local hovering = false
                btn.MouseEnter:Connect(function()
                    if not focusing then
                        Utility:TweenObject(btn, {BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 10, themeList.ElementColor.g * 255 + 10, themeList.ElementColor.b * 255 + 10)}, 0.1)
                        hovering = true
                    end
                end)
                btn.MouseLeave:Connect(function()
                    if not focusing then
                        Utility:TweenObject(btn, {BackgroundColor3 = themeList.ElementColor}, 0.1)
                        hovering = false
                    end
                end)

                viewInfo.MouseButton1Click:Connect(function()
                    if not viewDe then
                        viewDe = true
                        focusing = true
                        for i, v in next, infoContainer:GetChildren() do
                            if v ~= moreInfo then
                                Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            end
                        end
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 0, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 0.4}, 0.2)
                        Utility:TweenObject(btn, {BackgroundColor3 = themeList.ElementColor}, 0.2)
                        wait(1.5)
                        focusing = false
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                        viewDe = false
                    end
                end)

                coroutine.wrap(function()
                    while wait() do
                        if not hovering then
                            dropOpen.BackgroundColor3 = themeList.ElementColor
                        end
                        Sample.ImageColor3 = themeList.SchemeColor
                        dropFrame.BackgroundColor3 = themeList.Background
                        listImg.ImageColor3 = themeList.SchemeColor
                        itemTextbox.TextColor3 = themeList.TextColor
                        viewInfo.ImageColor3 = themeList.SchemeColor
                        moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                        moreInfo.TextColor3 = themeList.TextColor
                    end
                end)()

                for i, v in next, list do
                    local optionSelect = Instance.new("TextButton")
                    local UICorner_2 = Instance.new("UICorner")
                    local Sample1 = Instance.new("ImageLabel")

                    Sample1.Name = "Sample1"
                    Sample1.Parent = optionSelect
                    Sample1.BackgroundTransparency = 1
                    Sample1.Image = "http://www.roblox.com/asset/?id=4560909609"
                    Sample1.ImageColor3 = themeList.SchemeColor
                    Sample1.ImageTransparency = 0.5

                    optionSelect.Name = "optionSelect"
                    optionSelect.Parent = dropFrame
                    optionSelect.BackgroundColor3 = themeList.ElementColor
                    optionSelect.Size = UDim2.new(0, 410, 0, 35)
                    optionSelect.AutoButtonColor = false
                    optionSelect.Font = Enum.Font.GothamBold
                    optionSelect.Text = "  "..v
                    optionSelect.TextColor3 = themeList.TextColor
                    optionSelect.TextSize = 16
                    optionSelect.TextXAlignment = Enum.TextXAlignment.Left
                    optionSelect.ClipsDescendants = true

                    UICorner_2.CornerRadius = UDim.new(0, 6)
                    UICorner_2.Parent = optionSelect

                    optionSelect.MouseButton1Click:Connect(function()
                        if not focusing then
                            opened = false
                            callback(v)
                            itemTextbox.Text = v
                            Utility:TweenObject(dropFrame, {Size = UDim2.new(0, 410, 0, 35)}, 0.2)
                            wait(0.2)
                            updateSectionFrame()
                            UpdateSize()
                            local c = Sample1:Clone()
                            c.Parent = optionSelect
local x, y = (ms.X - c.AbsolutePosition.X), (ms.Y - c.AbsolutePosition.Y)
                            c.Position = UDim2.new(0, x, 0, y)
                            local len, size = 0.4, optionSelect.AbsoluteSize.X * 1.5
                            c:TweenSizeAndPosition(UDim2.new(0, size, 0, size), UDim2.new(0.5, -size / 2, 0.5, -size / 2), 'Out', 'Sine', len, true)
                            for i = 1, 10 do
                                c.ImageTransparency = c.ImageTransparency + 0.1
                                wait(len / 10)
                            end
                            c:Destroy()
                        end
                    end)

                    local hovering = false
                    optionSelect.MouseEnter:Connect(function()
                        if not focusing then
                            Utility:TweenObject(optionSelect, {BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 10, themeList.ElementColor.g * 255 + 10, themeList.ElementColor.b * 255 + 10)}, 0.1)
                            hovering = true
                        end
                    end)
                    optionSelect.MouseLeave:Connect(function()
                        if not focusing then
                            Utility:TweenObject(optionSelect, {BackgroundColor3 = themeList.ElementColor}, 0.1)
                            hovering = false
                        end
                    end)

                    coroutine.wrap(function()
                        while wait() do
                            if not hovering then
                                optionSelect.BackgroundColor3 = themeList.ElementColor
                            end
                            optionSelect.TextColor3 = themeList.TextColor
                            Sample1.ImageColor3 = themeList.SchemeColor
                        end
                    end)()
                end

                function DropFunction:Refresh(newList)
                    for i, v in next, dropFrame:GetChildren() do
                        if v.Name == "optionSelect" then
                            v:Destroy()
                        end
                    end
                    for i, v in next, newList do
                        local optionSelect = Instance.new("TextButton")
                        local UICorner_2 = Instance.new("UICorner")
                        local Sample1 = Instance.new("ImageLabel")

                        Sample1.Name = "Sample1"
                        Sample1.Parent = optionSelect
                        Sample1.BackgroundTransparency = 1
                        Sample1.Image = "http://www.roblox.com/asset/?id=4560909609"
                        Sample1.ImageColor3 = themeList.SchemeColor
                        Sample1.ImageTransparency = 0.5

                        optionSelect.Name = "optionSelect"
                        optionSelect.Parent = dropFrame
                        optionSelect.BackgroundColor3 = themeList.ElementColor
                        optionSelect.Size = UDim2.new(0, 410, 0, 35)
                        optionSelect.AutoButtonColor = false
                        optionSelect.Font = Enum.Font.GothamBold
                        optionSelect.Text = "  "..v
                        optionSelect.TextColor3 = themeList.TextColor
                        optionSelect.TextSize = 16
                        optionSelect.TextXAlignment = Enum.TextXAlignment.Left
                        optionSelect.ClipsDescendants = true

                        UICorner_2.CornerRadius = UDim.new(0, 6)
                        UICorner_2.Parent = optionSelect

                        optionSelect.MouseButton1Click:Connect(function()
                            if not focusing then
                                opened = false
                                callback(v)
                                itemTextbox.Text = v
                                Utility:TweenObject(dropFrame, {Size = UDim2.new(0, 410, 0, 35)}, 0.2)
                                wait(0.2)
                                updateSectionFrame()
                                UpdateSize()
                                local c = Sample1:Clone()
                                c.Parent = optionSelect
                                local x, y = (ms.X - c.AbsolutePosition.X), (ms.Y - c.AbsolutePosition.Y)
                                c.Position = UDim2.new(0, x, 0, y)
                                local len, size = 0.4, optionSelect.AbsoluteSize.X * 1.5
                                c:TweenSizeAndPosition(UDim2.new(0, size, 0, size), UDim2.new(0.5, -size / 2, 0.5, -size / 2), 'Out', 'Sine', len, true)
                                for i = 1, 10 do
                                    c.ImageTransparency = c.ImageTransparency + 0.1
                                    wait(len / 10)
                                end
                                c:Destroy()
                            end
                        end)

                        local hovering = false
                        optionSelect.MouseEnter:Connect(function()
                            if not focusing then
                                Utility:TweenObject(optionSelect, {BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 10, themeList.ElementColor.g * 255 + 10, themeList.ElementColor.b * 255 + 10)}, 0.1)
                                hovering = true
                            end
                        end)
                        optionSelect.MouseLeave:Connect(function()
                            if not focusing then
                                Utility:TweenObject(optionSelect, {BackgroundColor3 = themeList.ElementColor}, 0.1)
                                hovering = false
                            end
                        end)

                        coroutine.wrap(function()
                            while wait() do
                                if not hovering then
                                    optionSelect.BackgroundColor3 = themeList.ElementColor
                                end
                                optionSelect.TextColor3 = themeList.TextColor
                                Sample1.ImageColor3 = themeList.SchemeColor
                            end
                        end)()
                    end
                    updateSectionFrame()
                    UpdateSize()
                end

                return DropFunction
            end

            function Elements:NewLabel(title)
                local labelFrame = Instance.new("Frame")
                local labelText = Instance.new("TextLabel")
                local UICorner = Instance.new("UICorner")

                labelFrame.Name = "labelFrame"
                labelFrame.Parent = sectionInners
                labelFrame.BackgroundColor3 = themeList.ElementColor
                labelFrame.Size = UDim2.new(0, 410, 0, 35)

                labelText.Name = "labelText"
                labelText.Parent = labelFrame
                labelText.BackgroundTransparency = 1
                labelText.Position = UDim2.new(0.02, 0, 0, 0)
                labelText.Size = UDim2.new(0.98, 0, 1, 0)
                labelText.Font = Enum.Font.GothamBold
                labelText.Text = title
                labelText.TextColor3 = themeList.TextColor
                labelText.TextSize = 16
                labelText.TextXAlignment = Enum.TextXAlignment.Left

                UICorner.CornerRadius = UDim.new(0, 6)
                UICorner.Parent = labelFrame

                updateSectionFrame()
                UpdateSize()

                coroutine.wrap(function()
                    while wait() do
                        labelFrame.BackgroundColor3 = themeList.ElementColor
                        labelText.TextColor3 = themeList.TextColor
                    end
                end)()

                local LabelFunction = {}
                function LabelFunction:UpdateLabel(newText)
                    labelText.Text = newText
                end
                return LabelFunction
            end

            function Elements:NewKeybind(keytext, keyinf, first, callback)
                keytext = keytext or "Keybind"
                keyinf = keyinf or "Bind a key"
                callback = callback or function() end
                local oldKey = first.Name
                local KeyFunction = {}

                local keybindElement = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner")
                local keybindInfo = Instance.new("TextLabel")
                local viewInfo = Instance.new("ImageButton")
                local keybindBtn = Instance.new("TextButton")
                local UICorner_2 = Instance.new("UICorner")
                local Sample = Instance.new("ImageLabel")

                keybindElement.Name = "keybindElement"
                keybindElement.Parent = sectionInners
                keybindElement.BackgroundColor3 = themeList.ElementColor
                keybindElement.Size = UDim2.new(0, 410, 0, 35)
                keybindElement.AutoButtonColor = false
                keybindElement.Font = Enum.Font.SourceSans
                keybindElement.Text = ""
                keybindElement.TextColor3 = Color3.fromRGB(0, 0, 0)
                keybindElement.TextSize = 14

                UICorner.CornerRadius = UDim.new(0, 6)
                UICorner.Parent = keybindElement

                keybindInfo.Name = "keybindInfo"
                keybindInfo.Parent = keybindElement
                keybindInfo.BackgroundTransparency = 1
                keybindInfo.Position = UDim2.new(0.1, 0, 0.3, 0)
                keybindInfo.Size = UDim2.new(0, 160, 0, 16)
                keybindInfo.Font = Enum.Font.GothamBold
                keybindInfo.Text = keytext
                keybindInfo.TextColor3 = themeList.TextColor
                keybindInfo.TextSize = 16
                keybindInfo.TextXAlignment = Enum.TextXAlignment.Left

                viewInfo.Name = "viewInfo"
                viewInfo.Parent = keybindElement
                viewInfo.BackgroundTransparency = 1
                viewInfo.Position = UDim2.new(0.93, 0, 0.2, 0)
                viewInfo.Size = UDim2.new(0, 25, 0, 25)
                viewInfo.ZIndex = 2
                viewInfo.Image = "rbxassetid://3926305904"
                viewInfo.ImageColor3 = themeList.SchemeColor
                viewInfo.ImageRectOffset = Vector2.new(764, 764)
                viewInfo.ImageRectSize = Vector2.new(36, 36)

                keybindBtn.Name = "keybindBtn"
                keybindBtn.Parent = keybindElement
                keybindBtn.BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 - 10, themeList.ElementColor.g * 255 - 10, themeList.ElementColor.b * 255 - 10)
                keybindBtn.Position = UDim2.new(0.65, 0, 0.2, 0)
                keybindBtn.Size = UDim2.new(0, 100, 0, 20)
                keybindBtn.AutoButtonColor = false
                keybindBtn.Font = Enum.Font.Gotham
                keybindBtn.Text = oldKey
                keybindBtn.TextColor3 = themeList.TextColor
                keybindBtn.TextSize = 14

                UICorner_2.CornerRadius = UDim.new(0, 4)
                UICorner_2.Parent = keybindBtn

                Sample.Name = "Sample"
                Sample.Parent = keybindElement
                Sample.BackgroundTransparency = 1
                Sample.Image = "http://www.roblox.com/asset/?id=4560909609"
                Sample.ImageColor3 = themeList.SchemeColor
                Sample.ImageTransparency = 0.5

                local moreInfo = Instance.new("TextLabel")
                local UICornerInfo = Instance.new("UICorner")
                moreInfo.Name = "TipMore"
                moreInfo.Parent = infoContainer
                moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                moreInfo.Position = UDim2.new(0, 0, 2, 0)
                moreInfo.Size = UDim2.new(0, 410, 0, 40)
                moreInfo.ZIndex = 9
                moreInfo.Font = Enum.Font.GothamBold
                moreInfo.Text = "  "..keyinf
                moreInfo.TextColor3 = themeList.TextColor
                moreInfo.TextSize = 16
                moreInfo.TextXAlignment = Enum.TextXAlignment.Left
                UICornerInfo.CornerRadius = UDim.new(0, 6)
                UICornerInfo.Parent = moreInfo

                updateSectionFrame()
                UpdateSize()

                local ms = game.Players.LocalPlayer:GetMouse()
                local uis = game:GetService("UserInputService")
                local btn = keybindElement

                local hovering = false
                btn.MouseEnter:Connect(function()
                    if not focusing then
                        Utility:TweenObject(btn, {BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 10, themeList.ElementColor.g * 255 + 10, themeList.ElementColor.b * 255 + 10)}, 0.1)
                        hovering = true
                    end
                end)
                btn.MouseLeave:Connect(function()
                    if not focusing then
                        Utility:TweenObject(btn, {BackgroundColor3 = themeList.ElementColor}, 0.1)
                        hovering = false
                    end
                end)

                keybindBtn.MouseButton1Click:Connect(function()
                    if not focusing then
                        keybindBtn.Text = "..."
                        local a, b = game:GetService("UserInputService").InputBegan:Wait()
                        local name = tostring(a.KeyCode.Name)
                        if name ~= "Unknown" then
                            keybindBtn.Text = name
                            oldKey = name
                            local c = Sample:Clone()
                            c.Parent = keybindElement
                            local x, y = (ms.X - c.AbsolutePosition.X), (ms.Y - c.AbsolutePosition.Y)
                            c.Position = UDim2.new(0, x, 0, y)
                            local len, size = 0.4, keybindElement.AbsoluteSize.X * 1.5
                            c:TweenSizeAndPosition(UDim2.new(0, size, 0, size), UDim2.new(0.5, -size / 2, 0.5, -size / 2), 'Out', 'Sine', len, true)
                            for i = 1, 10 do
                                c.ImageTransparency = c.ImageTransparency + 0.1
                                wait(len / 10)
                            end
                            c:Destroy()
                        end
                    else
                        for i, v in next, infoContainer:GetChildren() do
                            Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            focusing = false
                        end
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                    end
                end)

                viewInfo.MouseButton1Click:Connect(function()
                    if not viewDe then
                        viewDe = true
                        focusing = true
                        for i, v in next, infoContainer:GetChildren() do
                            if v ~= moreInfo then
                                Utility:TweenObject(v, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                            end
                        end
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 0, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 0.4}, 0.2)
                        Utility:TweenObject(btn, {BackgroundColor3 = themeList.ElementColor}, 0.2)
                        wait(1.5)
                        focusing = false
                        Utility:TweenObject(moreInfo, {Position = UDim2.new(0, 0, 2, 0)}, 0.2)
                        Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
                        viewDe = false
                    end
                end)

                game:GetService("UserInputService").InputBegan:Connect(function(input)
                    if input.KeyCode.Name == oldKey and not focusing then
                        pcall(callback)
                    end
                end)

                coroutine.wrap(function()
                    while wait() do
                        if not hovering then
                            keybindElement.BackgroundColor3 = themeList.ElementColor
                        end
                        keybindBtn.BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 - 10, themeList.ElementColor.g * 255 - 10, themeList.ElementColor.b * 255 - 10)
                        keybindBtn.TextColor3 = themeList.TextColor
                        keybindInfo.TextColor3 = themeList.TextColor
                        viewInfo.ImageColor3 = themeList.SchemeColor
                        Sample.ImageColor3 = themeList.SchemeColor
                        moreInfo.BackgroundColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 14, themeList.SchemeColor.g * 255 - 17, themeList.SchemeColor.b * 255 - 13)
                        moreInfo.TextColor3 = themeList.TextColor
                    end
                end)()

                function KeyFunction:UpdateKey(newKey)
                    keybindBtn.Text = newKey
                    oldKey = newKey
                end
                return KeyFunction
            end

            return Elements
        end
        return Sections
    end

    local keybindHandler = function(actionName, inputState, inputObject)
        if inputState == Enum.UserInputState.Begin then
            if actionName == "CloseUI" and inputObject.KeyCode == Enum.KeyCode.X then
                Utility:TweenObject(close, {ImageTransparency = 1}, 0.2)
                wait(0.2)
                Utility:TweenObject(Main, {Position = UDim2.new(0.5, 0, -0.5, 0)}, 0.5, Enum.EasingStyle.Quad)
                wait(0.5)
                ScreenGui:Destroy()
            elseif actionName == "MinimizeUI" and inputObject.KeyCode == Enum.KeyCode.Minus then
                MoonLight:MinimizeUI()
            end
        end
        return Enum.ContextActionResult.Pass
    end

    contextActionService:BindAction("CloseUI", keybindHandler, false, Enum.KeyCode.X)
    contextActionService:BindAction("MinimizeUI", keybindHandler, false, Enum.KeyCode.Minus)

    local function checkMobile()
        return input.UserInputType == Enum.UserInputType.Touch
    end

    if checkMobile() then
        Main.Size = UDim2.new(0, 500, 0, 300)
        MainHeader.Size = UDim2.new(0, 500, 0, 40)
        coverup.Size = UDim2.new(0, 500, 0, 5)
        MainSide.Size = UDim2.new(0, 150, 0, 260)
        coverup_2.Size = UDim2.new(0, 5, 0, 260)
        tabFrames.Size = UDim2.new(0, 140, 0, 250)
        pages.Size = UDim2.new(0, 350, 0, 260)
        blurFrame.Size = UDim2.new(0, 350, 0, 260)
        infoContainer.Size = UDim2.new(0, 350, 0, 40)
    end

    return Tabs
end

return MoonLight
