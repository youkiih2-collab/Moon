local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

local Colors = {
	Background = Color3.fromRGB(10, 10, 15),
	Secondary = Color3.fromRGB(20, 20, 30),
	Accent = Color3.fromRGB(100, 150, 255),
	Gray = Color3.fromRGB(50, 50, 50),
	Text = Color3.fromRGB(200, 200, 200),
	TextMuted = Color3.fromRGB(120, 120, 120),
}

local MoonLightLib = {}
MoonLightLib.__index = MoonLightLib

function MoonLightLib:CreateWindow(title)
	local Window = {}
	Window.Tabs = {}
	Window.IsVisible = false
	Window.Notifications = {}

	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Name = "MoonLight"
	ScreenGui.Parent = PlayerGui
	ScreenGui.ResetOnSpawn = false
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	local MainFrame = Instance.new("Frame")
	MainFrame.Name = "MainFrame"
	MainFrame.Parent = ScreenGui
	MainFrame.BackgroundColor3 = Colors.Background
	MainFrame.BackgroundTransparency = 0.3
	MainFrame.BorderSizePixel = 0
	MainFrame.Position = UDim2.new(0.5, -375, 0.5, -250)
	MainFrame.Size = UDim2.new(0, 750, 0, 500)
	MainFrame.Active = true
	MainFrame.Visible = false

	local MainCorner = Instance.new("UICorner")
	MainCorner.CornerRadius = UDim.new(0, 6)
	MainCorner.Parent = MainFrame

	local TitleBar = Instance.new("Frame")
	TitleBar.Name = "TitleBar"
	TitleBar.Parent = MainFrame
	TitleBar.BackgroundColor3 = Colors.Secondary
	TitleBar.BackgroundTransparency = 0.4
	TitleBar.Size = UDim2.new(1, 0, 0, 40)

	local TitleLabel = Instance.new("TextLabel")
	TitleLabel.Parent = TitleBar
	TitleLabel.BackgroundTransparency = 1
	TitleLabel.Position = UDim2.new(0, 15, 0, 0)
	TitleLabel.Size = UDim2.new(0, 200, 1, 0)
	TitleLabel.Font = Enum.Font.GothamBold
	TitleLabel.Text = title or "MOONLIGHT"
	TitleLabel.TextColor3 = Colors.Text
	TitleLabel.TextSize = 16
	TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
	TitleLabel.TextTruncate = Enum.TextTruncate.AtEnd

	local CloseButton = Instance.new("TextButton")
	CloseButton.Parent = TitleBar
	CloseButton.BackgroundColor3 = Colors.Gray
	CloseButton.BackgroundTransparency = 0.5
	CloseButton.Position = UDim2.new(1, -35, 0, 5)
	CloseButton.Size = UDim2.new(0, 30, 0, 30)
	CloseButton.Font = Enum.Font.GothamBold
	CloseButton.Text = "Ã—"
	CloseButton.TextColor3 = Colors.Text
	CloseButton.TextSize = 14

	local CloseCorner = Instance.new("UICorner")
	CloseCorner.CornerRadius = UDim.new(0, 6)
	CloseCorner.Parent = CloseButton

	local SidePanel = Instance.new("Frame")
	SidePanel.Name = "SidePanel"
	SidePanel.Parent = MainFrame
	SidePanel.BackgroundColor3 = Colors.Secondary
	SidePanel.BackgroundTransparency = 0.4
	SidePanel.Position = UDim2.new(0, 0, 0, 40)
	SidePanel.Size = UDim2.new(0, 150, 1, -40)

	local TabScrollFrame = Instance.new("ScrollingFrame")
	TabScrollFrame.Parent = SidePanel
	TabScrollFrame.BackgroundTransparency = 1
	TabScrollFrame.Size = UDim2.new(1, 0, 1, 0)
	TabScrollFrame.ScrollBarThickness = 2
	TabScrollFrame.ScrollBarImageColor3 = Colors.Accent
	TabScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)

	local TabLayout = Instance.new("UIListLayout")
	TabLayout.Parent = TabScrollFrame
	TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
	TabLayout.Padding = UDim.new(0, 5)

	local TabPadding = Instance.new("UIPadding")
	TabPadding.Parent = TabScrollFrame
	TabPadding.PaddingLeft = UDim.new(0, 5)
	TabPadding.PaddingTop = UDim.new(0, 5)

	TabLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		TabScrollFrame.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y + 10)
	end)

	local ContentArea = Instance.new("Frame")
	ContentArea.Name = "ContentArea"
	ContentArea.Parent = MainFrame
	ContentArea.BackgroundColor3 = Colors.Background
	ContentArea.BackgroundTransparency = 0.4
	ContentArea.Position = UDim2.new(0, 150, 0, 40)
	ContentArea.Size = UDim2.new(1, -150, 1, -40)

	local ConfirmationFrame = Instance.new("Frame")
	ConfirmationFrame.Parent = MainFrame
	ConfirmationFrame.BackgroundColor3 = Colors.Secondary
	ConfirmationFrame.BackgroundTransparency = 0.3
	ConfirmationFrame.Position = UDim2.new(0.5, -150, 0.5, -50)
	ConfirmationFrame.Size = UDim2.new(0, 300, 0, 100)
	ConfirmationFrame.Visible = false

	local ConfirmationCorner = Instance.new("UICorner")
	ConfirmationCorner.CornerRadius = UDim.new(0, 6)
	ConfirmationCorner.Parent = ConfirmationFrame

	local ConfirmationText = Instance.new("TextLabel")
	ConfirmationText.Parent = ConfirmationFrame
	ConfirmationText.BackgroundTransparency = 1
	ConfirmationText.Position = UDim2.new(0, 0, 0, 20)
	ConfirmationText.Size = UDim2.new(1, 0, 0, 30)
	ConfirmationText.Font = Enum.Font.Gotham
	ConfirmationText.Text = "Are you sure you want to close the GUI?"
	ConfirmationText.TextColor3 = Colors.Text
	ConfirmationText.TextSize = 14

	local YesButton = Instance.new("TextButton")
	YesButton.Parent = ConfirmationFrame
	YesButton.BackgroundColor3 = Colors.Accent
	YesButton.BackgroundTransparency = 0.5
	YesButton.Position = UDim2.new(0.15, 0, 0.6, 0)
	YesButton.Size = UDim2.new(0.3, 0, 0.3, 0)
	YesButton.Font = Enum.Font.Gotham
	YesButton.Text = "Yes"
	YesButton.TextColor3 = Colors.Text
	YesButton.TextSize = 14

	local YesCorner = Instance.new("UICorner")
	YesCorner.CornerRadius = UDim.new(0, 4)
	YesCorner.Parent = YesButton

	local NoButton = Instance.new("TextButton")
	NoButton.Parent = ConfirmationFrame
	NoButton.BackgroundColor3 = Colors.Gray
	NoButton.BackgroundTransparency = 0.5
	NoButton.Position = UDim2.new(0.55, 0, 0.6, 0)
	NoButton.Size = UDim2.new(0.3, 0, 0.3, 0)
	NoButton.Font = Enum.Font.Gotham
	NoButton.Text = "No"
	NoButton.TextColor3 = Colors.Text
	NoButton.TextSize = 14

	local NoCorner = Instance.new("UICorner")
	NoCorner.CornerRadius = UDim.new(0, 4)
	NoCorner.Parent = NoButton

	local openKey = Enum.KeyCode.Insert
	local isDragging = false
	local dragStart, startPos

	local dragConnection
	TitleBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			isDragging = true
			dragStart = input.Position
			startPos = MainFrame.Position
			if dragConnection then dragConnection:Disconnect() end
			dragConnection = UserInputService.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					local delta = input.Position - dragStart
					local screenSize = workspace.CurrentCamera.ViewportSize
					local frameSize = MainFrame.AbsoluteSize
					local newPosX = math.clamp(startPos.X.Offset + delta.X, 0, screenSize.X - frameSize.X)
					local newPosY = math.clamp(startPos.Y.Offset + delta.Y, 0, screenSize.Y - frameSize.Y)
					MainFrame.Position = UDim2.new(0, newPosX, 0, newPosY)
				end
			end)
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			isDragging = false
			if dragConnection then
				dragConnection:Disconnect()
				dragConnection = nil
			end
		end
	end)

	CloseButton.MouseButton1Click:Connect(function()
		ConfirmationFrame.Visible = true
	end)

	YesButton.MouseButton1Click:Connect(function()
		local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		TweenService:Create(MainFrame, tweenInfo, {Size = UDim2.new(0, 0, 0, 0)}):Play()
		TweenService:Create(MainFrame, tweenInfo, {Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
		wait(0.3)
		ScreenGui:Destroy()
	end)

	NoButton.MouseButton1Click:Connect(function()
		ConfirmationFrame.Visible = false
	end)

	UserInputService.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == openKey then
			if not Window.IsVisible then
				Window.IsVisible = true
				MainFrame.Size = UDim2.new(0, 0, 0, 0)
				MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
				MainFrame.Visible = true
				local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
				TweenService:Create(MainFrame, tweenInfo, {Size = UDim2.new(0, 750, 0, 500), Position = UDim2.new(0.5, -375, 0.5, -250)}):Play()
			else
				local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
				TweenService:Create(MainFrame, tweenInfo, {Size = UDim2.new(0, 0, 0, 0), Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
				wait(0.3)
				Window.IsVisible = false
				MainFrame.Visible = false
			end
		end
	end)

	Window.ScreenGui = ScreenGui
	Window.MainFrame = MainFrame
	Window.ContentArea = ContentArea
	Window.TabScrollFrame = TabScrollFrame

	function Window:CreateNotification(text, duration, button1Text, button2Text, button1Callback, button2Callback)
		local G2L = {}
		G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
		G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling

		G2L["2"] = Instance.new("Frame", G2L["1"])
		G2L["2"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 31)
		G2L["2"]["ClipsDescendants"] = true
		G2L["2"]["Size"] = UDim2.new(0, 250, 0, 95)
		G2L["2"]["Position"] = UDim2.new(1, -270, 0, 10)
		G2L["2"]["Name"] = "Notification"
		G2L["2"]["BackgroundTransparency"] = 0.4

		G2L["3"] = Instance.new("UICorner", G2L["2"])
		G2L["3"]["CornerRadius"] = UDim.new(0, 6)

		G2L["4"] = Instance.new("TextLabel", G2L["2"])
		G2L["4"]["TextWrapped"] = true
		G2L["4"]["TextSize"] = 12
		G2L["4"]["FontFace"] = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
		G2L["4"]["TextColor3"] = Color3.fromRGB(201, 201, 201)
		G2L["4"]["BackgroundTransparency"] = 1
		G2L["4"]["Size"] = UDim2.new(1, -20, 0.43871, 0)
		G2L["4"]["Text"] = text or "This is a notification!"
		G2L["4"]["Position"] = UDim2.new(0, 10, 0, 30)

		G2L["5"] = Instance.new("Frame", G2L["2"])
		G2L["5"]["BackgroundColor3"] = Color3.fromRGB(101, 151, 255)
		G2L["5"]["Size"] = UDim2.new(1, 0, 0, 4)
		G2L["5"]["Position"] = UDim2.new(0, 0, 0.9, -4)
		G2L["5"]["BackgroundTransparency"] = 0.3

		G2L["6"] = Instance.new("UICorner", G2L["5"])
		G2L["6"]["CornerRadius"] = UDim.new(0, 2)

		G2L["7"] = Instance.new("Frame", G2L["5"])
		G2L["7"]["BackgroundColor3"] = Color3.fromRGB(101, 151, 255)
		G2L["7"]["Size"] = UDim2.new(1, 0, 1, 0)

		G2L["8"] = Instance.new("UICorner", G2L["7"])
		G2L["8"]["CornerRadius"] = UDim.new(0, 2)

		G2L["9"] = Instance.new("Frame", G2L["2"])
		G2L["9"]["Size"] = UDim2.new(1, -20, 0.3, 0)
		G2L["9"]["Position"] = UDim2.new(0, 10, 0, 5)
		G2L["9"]["BackgroundTransparency"] = 1

		if button1Text or button2Text then
			if button1Text then
				G2L["a"] = Instance.new("TextButton", G2L["9"])
				G2L["a"]["TextSize"] = 10
				G2L["a"]["TextColor3"] = Color3.fromRGB(201, 201, 201)
				G2L["a"]["BackgroundColor3"] = Color3.fromRGB(51, 51, 51)
				G2L["a"]["FontFace"] = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
				G2L["a"]["BackgroundTransparency"] = 0.5
				G2L["a"]["Size"] = UDim2.new(0.45, -5, 0.72581, 0)
				G2L["a"]["Text"] = button1Text
				G2L["a"]["Position"] = UDim2.new(0, 0, 0, 0)

				G2L["b"] = Instance.new("UICorner", G2L["a"])
				G2L["b"]["CornerRadius"] = UDim.new(0, 4)

				G2L["a"].MouseButton1Click:Connect(function()
					if button1Callback then button1Callback() end
					G2L["2"]:Destroy()
				end)
			end

			if button2Text then
				G2L["c"] = Instance.new("TextButton", G2L["9"])
				G2L["c"]["TextSize"] = 10
				G2L["c"]["TextColor3"] = Color3.fromRGB(201, 201, 201)
				G2L["c"]["BackgroundColor3"] = Color3.fromRGB(51, 51, 51)
				G2L["c"]["FontFace"] = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
				G2L["c"]["BackgroundTransparency"] = 0.5
				G2L["c"]["Size"] = UDim2.new(0.45, -5, 0.72581, 0)
				G2L["c"]["Text"] = button2Text
				G2L["c"]["Position"] = UDim2.new(0.55, 0, 0, 0)

				G2L["d"] = Instance.new("UICorner", G2L["c"])
				G2L["d"]["CornerRadius"] = UDim.new(0, 4)

				G2L["c"].MouseButton1Click:Connect(function()
					if button2Callback then button2Callback() end
					G2L["2"]:Destroy()
				end)
			end
		end

		local enterTween = TweenService:Create(G2L["2"], TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(1, -270, 0, 10)})
		enterTween:Play()

		table.insert(Window.Notifications, G2L["2"])

		local exitTween
		local function updatePosition()
			for i, notif in ipairs(Window.Notifications) do
				local targetY = 10 + ((i - 1) * 105)
				TweenService:Create(notif, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(1, -270, 0, targetY)}):Play()
				if notif.Position.X.Offset > workspace.CurrentCamera.ViewportSize.X then
					notif:Destroy()
					table.remove(Window.Notifications, i)
				end
			end
		end

		updatePosition()

		spawn(function()
			local barTween = TweenService:Create(G2L["7"], TweenInfo.new(duration or 3, Enum.EasingStyle.Linear), {Size = UDim2.new(0, 0, 1, 0)})
			barTween:Play()
			barTween.Completed:Wait()
			exitTween = TweenService:Create(G2L["2"], TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(1, -260, 0, G2L["2"].Position.Y.Offset)})
			exitTween:Play()
			exitTween.Completed:Wait()
			G2L["2"]:Destroy()
			for i, notif in ipairs(Window.Notifications) do
				if notif == G2L["2"] then
					table.remove(Window.Notifications, i)
					break
				end
			end
			updatePosition()
		end)

		G2L["2"].Destroying:Connect(function()
			for i, notif in ipairs(Window.Notifications) do
				if notif == G2L["2"] then
					table.remove(Window.Notifications, i)
					break
				end
			end
			updatePosition()
		end)

		return G2L["1"]
	end

	function Window:CreateTab(name)
		local Tab = {}
		Tab.Sections = {}
		Tab.Name = name

		local TabButton = Instance.new("TextButton")
		TabButton.Name = name .. "Tab"
		TabButton.Parent = self.TabScrollFrame
		TabButton.BackgroundColor3 = Colors.Secondary
		TabButton.BackgroundTransparency = 0.5
		TabButton.Size = UDim2.new(1, -10, 0, 30)
		TabButton.Font = Enum.Font.Gotham
		TabButton.Text = name
		TabButton.TextColor3 = Colors.TextMuted
		TabButton.TextSize = 12
		TabButton.AutoButtonColor = false

		local TabCorner = Instance.new("UICorner")
		TabCorner.CornerRadius = UDim.new(0, 4)
		TabCorner.Parent = TabButton

		local TabContent = Instance.new("ScrollingFrame")
		TabContent.Name = name .. "Content"
		TabContent.Parent = self.ContentArea
		TabContent.BackgroundTransparency = 1
		TabContent.Size = UDim2.new(1, 0, 1, 0)
		TabContent.ScrollBarThickness = 2
		TabContent.ScrollBarImageColor3 = Colors.Accent
		TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
		TabContent.Visible = false

		local ContentLayout = Instance.new("UIListLayout")
		ContentLayout.Parent = TabContent
		ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
		ContentLayout.Padding = UDim.new(0, 8)

		local ContentPadding = Instance.new("UIPadding")
		ContentPadding.Parent = TabContent
		ContentPadding.PaddingTop = UDim.new(0, 10)
		ContentPadding.PaddingLeft = UDim.new(0, 10)
		ContentPadding.PaddingRight = UDim.new(0, 10)

		ContentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			TabContent.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y + 20)
		end)

		TabButton.MouseButton1Click:Connect(function()
			for _, tab in pairs(self.Tabs) do
				tab.Content.Visible = false
				tab.Button.BackgroundTransparency = 0.5
				tab.Button.TextColor3 = Colors.TextMuted
			end
			TabContent.Visible = true
			TabButton.BackgroundTransparency = 0.3
			TabButton.TextColor3 = Colors.Text
			self.CurrentTab = Tab
		end)

		if #self.Tabs == 0 then
			TabContent.Visible = true
			TabButton.BackgroundTransparency = 0.3
			TabButton.TextColor3 = Colors.Text
			self.CurrentTab = Tab
		end

		Tab.Button = TabButton
		Tab.Content = TabContent
		Tab.Layout = ContentLayout

		function Tab:CreateSection(name, collapsible)
			local Section = {}
			Section.IsCollapsed = false

			local SectionFrame = Instance.new("Frame")
			SectionFrame.Name = name .. "Section"
			SectionFrame.Parent = self.Content
			SectionFrame.BackgroundColor3 = Colors.Secondary
			SectionFrame.BackgroundTransparency = 0.5
			SectionFrame.Size = UDim2.new(1, 0, 0, 30)
			SectionFrame.ClipsDescendants = true

			local SectionCorner = Instance.new("UICorner")
			SectionCorner.CornerRadius = UDim.new(0, 4)
			SectionCorner.Parent = SectionFrame

			local SectionTitle = Instance.new("TextLabel")
			SectionTitle.Parent = SectionFrame
			SectionTitle.BackgroundTransparency = 1
			SectionTitle.Position = UDim2.new(0, 10, 0, 0)
			SectionTitle.Size = UDim2.new(0, 200, 0, 30)
			SectionTitle.Font = Enum.Font.Gotham
			SectionTitle.Text = name
			SectionTitle.TextColor3 = Colors.Text
			SectionTitle.TextSize = 12
			SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
			SectionTitle.TextTruncate = Enum.TextTruncate.AtEnd

			local CollapseButton
			if collapsible then
				CollapseButton = Instance.new("TextButton")
				CollapseButton.Parent = SectionFrame
				CollapseButton.BackgroundTransparency = 1
				CollapseButton.Position = UDim2.new(1, -30, 0, 0)
				CollapseButton.Size = UDim2.new(0, 30, 0, 30)
				CollapseButton.Font = Enum.Font.Gotham
				CollapseButton.Text = "â–¼"
				CollapseButton.TextColor3 = Colors.TextMuted
				CollapseButton.TextSize = 12
				CollapseButton.AutoButtonColor = false
			end

			local ElementContainer = Instance.new("Frame")
			ElementContainer.Name = "ElementContainer"
			ElementContainer.Parent = SectionFrame
			ElementContainer.BackgroundTransparency = 1
			ElementContainer.Position = UDim2.new(0, 0, 0, 30)
			ElementContainer.Size = UDim2.new(1, 0, 0, 0)
			ElementContainer.Visible = not collapsible or not Section.IsCollapsed
			ElementContainer.ClipsDescendants = true

			local ElementLayout = Instance.new("UIListLayout")
			ElementLayout.Parent = ElementContainer
			ElementLayout.SortOrder = Enum.SortOrder.LayoutOrder
			ElementLayout.Padding = UDim.new(0, 5)

			local ElementPadding = Instance.new("UIPadding")
			ElementPadding.Parent = ElementContainer
			ElementPadding.PaddingLeft = UDim.new(0, 10)
			ElementPadding.PaddingRight = UDim.new(0, 10)

			local function UpdateSectionSize()
				if not Section.IsCollapsed then
					local contentHeight = ElementLayout.AbsoluteContentSize.Y + 30 + 5
					SectionFrame.Size = UDim2.new(1, 0, 0, contentHeight)
					ElementContainer.Size = UDim2.new(1, 0, 0, ElementLayout.AbsoluteContentSize.Y)
				else
					SectionFrame.Size = UDim2.new(1, 0, 0, 30)
					ElementContainer.Size = UDim2.new(1, 0, 0, 0)
				end
			end

			ElementLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(UpdateSectionSize)

			if collapsible then
				CollapseButton.MouseButton1Click:Connect(function()
					Section.IsCollapsed = not Section.IsCollapsed
					CollapseButton.Text = Section.IsCollapsed and "â–¶" or "â–¼"
					local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
					if Section.IsCollapsed then
						TweenService:Create(ElementContainer, tweenInfo, {Size = UDim2.new(1, 0, 0, 0)}):Play()
					else
						TweenService:Create(ElementContainer, tweenInfo, {Size = UDim2.new(1, 0, 0, ElementLayout.AbsoluteContentSize.Y)}):Play()
					end
					ElementContainer.Visible = not Section.IsCollapsed
					UpdateSectionSize()
				end)
			end

			Section.Frame = SectionFrame
			Section.Container = ElementContainer
			Section.Layout = ElementLayout
			Section.UpdateSize = UpdateSectionSize

			function Section:CreateButton(name, callback)
				local ButtonFrame = Instance.new("TextButton")
				ButtonFrame.Name = name .. "Button"
				ButtonFrame.Parent = self.Container
				ButtonFrame.BackgroundColor3 = Colors.Gray
				ButtonFrame.BackgroundTransparency = 0.5
				ButtonFrame.Size = UDim2.new(1, 0, 0, 25)
				ButtonFrame.Font = Enum.Font.Gotham
				ButtonFrame.Text = name
				ButtonFrame.TextColor3 = Colors.Text
				ButtonFrame.TextSize = 12
				ButtonFrame.AutoButtonColor = false

				local ButtonCorner = Instance.new("UICorner")
				ButtonCorner.CornerRadius = UDim.new(0, 4)
				ButtonCorner.Parent = ButtonFrame

				ButtonFrame.MouseButton1Click:Connect(function()
					if callback then callback() end
				end)

				self.UpdateSize()
				return ButtonFrame
			end

			function Section:CreateToggle(name, callback)
				local ToggleFrame = Instance.new("Frame")
				ToggleFrame.Name = name .. "Toggle"
				ToggleFrame.Parent = self.Container
				ToggleFrame.BackgroundColor3 = Colors.Gray
				ToggleFrame.BackgroundTransparency = 0.5
				ToggleFrame.Size = UDim2.new(1, 0, 0, 25)

				local ToggleCorner = Instance.new("UICorner")
				ToggleCorner.CornerRadius = UDim.new(0, 4)
				ToggleCorner.Parent = ToggleFrame

				local ToggleLabel = Instance.new("TextLabel")
				ToggleLabel.Parent = ToggleFrame
				ToggleLabel.BackgroundTransparency = 1
				ToggleLabel.Position = UDim2.new(0, 10, 0, 0)
				ToggleLabel.Size = UDim2.new(0, 200, 1, 0)
				ToggleLabel.Font = Enum.Font.Gotham
				ToggleLabel.Text = name
				ToggleLabel.TextColor3 = Colors.Text
				ToggleLabel.TextSize = 12
				ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
				ToggleLabel.TextTruncate = Enum.TextTruncate.AtEnd

				local ToggleButton = Instance.new("TextButton")
				ToggleButton.Parent = ToggleFrame
				ToggleButton.BackgroundColor3 = Colors.Secondary
				ToggleButton.Position = UDim2.new(1, -35, 0.5, -10)
				ToggleButton.Size = UDim2.new(0, 25, 0, 15)
				ToggleButton.Text = ""
				ToggleButton.AutoButtonColor = false

				local ToggleButtonCorner = Instance.new("UICorner")
				ToggleButtonCorner.CornerRadius = UDim.new(1, 0)
				ToggleButtonCorner.Parent = ToggleButton

				local ToggleSlider = Instance.new("Frame")
				ToggleSlider.Parent = ToggleButton
				ToggleSlider.BackgroundColor3 = Colors.Text
				ToggleSlider.Position = UDim2.new(0, 2, 0.5, -6)
				ToggleSlider.Size = UDim2.new(0, 11, 0, 11)

				local SliderCorner = Instance.new("UICorner")
				SliderCorner.CornerRadius = UDim.new(1, 0)
				SliderCorner.Parent = ToggleSlider

				local toggleState = false

				local function UpdateToggle(newState)
					toggleState = newState
					ToggleButton.BackgroundColor3 = toggleState and Colors.Accent or Colors.Secondary
					ToggleSlider.Position = toggleState and UDim2.new(1, -13, 0.5, -6) or UDim2.new(0, 2, 0.5, -6)
					if callback then callback(toggleState) end
					self.UpdateSize()
				end

				ToggleButton.MouseButton1Click:Connect(function()
					UpdateToggle(not toggleState)
				end)

				self.UpdateSize()
				return ToggleFrame, UpdateToggle
			end

			function Section:CreateSlider(name, min, max, default, callback)
				local SliderFrame = Instance.new("Frame")
				SliderFrame.Name = name .. "Slider"
				SliderFrame.Parent = self.Container
				SliderFrame.BackgroundColor3 = Colors.Gray
				SliderFrame.BackgroundTransparency = 0.5
				SliderFrame.Size = UDim2.new(1, 0, 0, 25)

				local SliderCorner = Instance.new("UICorner")
				SliderCorner.CornerRadius = UDim.new(0, 4)
				SliderCorner.Parent = SliderFrame

				local SliderLabel = Instance.new("TextLabel")
				SliderLabel.Parent = SliderFrame
				SliderLabel.BackgroundTransparency = 1
				SliderLabel.Position = UDim2.new(0, 10, 0, 0)
				SliderLabel.Size = UDim2.new(0, 200, 1, 0)
				SliderLabel.Font = Enum.Font.Gotham
				SliderLabel.Text = name
				SliderLabel.TextColor3 = Colors.Text
				SliderLabel.TextSize = 12
				SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
				SliderLabel.TextTruncate = Enum.TextTruncate.AtEnd

				local SliderValue = Instance.new("TextLabel")
				SliderValue.Parent = SliderFrame
				SliderValue.BackgroundTransparency = 1
				SliderValue.Position = UDim2.new(0.5, 0, 0, 0)
				SliderValue.Size = UDim2.new(0, 80, 1, 0)
				SliderValue.Font = Enum.Font.Gotham
				SliderValue.TextColor3 = Colors.Text
				SliderValue.TextSize = 12
				SliderValue.TextXAlignment = Enum.TextXAlignment.Right

				local SliderBar = Instance.new("Frame")
				SliderBar.Parent = SliderFrame
				SliderBar.BackgroundColor3 = Colors.Secondary
				SliderBar.Position = UDim2.new(1, -70, 0.5, -5)
				SliderBar.Size = UDim2.new(0, 60, 0, 10)

				local SliderBarCorner = Instance.new("UICorner")
				SliderBarCorner.CornerRadius = UDim.new(1, 0)
				SliderBarCorner.Parent = SliderBar

				local SliderFill = Instance.new("Frame")
				SliderFill.Parent = SliderBar
				SliderFill.BackgroundColor3 = Colors.Accent
				SliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)

				local SliderFillCorner = Instance.new("UICorner")
				SliderFillCorner.CornerRadius = UDim.new(1, 0)
				SliderFillCorner.Parent = SliderFill

				local isDraggingSlider = false
				local currentValue = default or min

				local function UpdateSlider(value)
					currentValue = math.clamp(value, min, max)
					local sliderPos = (currentValue - min) / (max - min)
					SliderFill.Size = UDim2.new(sliderPos, 0, 1, 0)
					SliderValue.Text = tostring(math.floor(currentValue))
					if callback then callback(currentValue) end
				end

				SliderBar.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
						isDraggingSlider = true
						local relativePos = math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
						UpdateSlider(min + (max - min) * relativePos)
					end
				end)

				UserInputService.InputChanged:Connect(function(input)
					if isDraggingSlider and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
						local relativePos = math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
						UpdateSlider(min + (max - min) * relativePos)
					end
				end)

				UserInputService.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
						isDraggingSlider = false
					end
				end)

				UpdateSlider(currentValue)
				self.UpdateSize()
				return SliderFrame, UpdateSlider
			end

			function Section:CreateDropdown(name, options, default, callback)
				local DropdownFrame = Instance.new("Frame")
				DropdownFrame.Name = name .. "Dropdown"
				DropdownFrame.Parent = self.Container
				DropdownFrame.BackgroundColor3 = Colors.Gray
				DropdownFrame.BackgroundTransparency = 0.5
				DropdownFrame.Size = UDim2.new(1, 0, 0, 25)
				DropdownFrame.ClipsDescendants = true

				local DropdownCorner = Instance.new("UICorner")
				DropdownCorner.CornerRadius = UDim.new(0, 4)
				DropdownCorner.Parent = DropdownFrame

				local DropdownLabel = Instance.new("TextLabel")
				DropdownLabel.Parent = DropdownFrame
				DropdownLabel.BackgroundTransparency = 1
				DropdownLabel.Position = UDim2.new(0, 10, 0, 0)
				DropdownLabel.Size = UDim2.new(0, 200, 0, 25)
				DropdownLabel.Font = Enum.Font.Gotham
				DropdownLabel.Text = name
				DropdownLabel.TextColor3 = Colors.Text
				DropdownLabel.TextSize = 12
				DropdownLabel.TextXAlignment = Enum.TextXAlignment.Left
				DropdownLabel.TextTruncate = Enum.TextTruncate.AtEnd

				local DropdownButton = Instance.new("TextButton")
				DropdownButton.Parent = DropdownFrame
				DropdownButton.BackgroundColor3 = Colors.Secondary
				DropdownButton.BackgroundTransparency = 0.5
				DropdownButton.Position = UDim2.new(1, -70, 0, 5)
				DropdownButton.Size = UDim2.new(0, 60, 0, 15)
				DropdownButton.Font = Enum.Font.Gotham
				DropdownButton.Text = default or options[1] or ""
				DropdownButton.TextColor3 = Colors.Text
				DropdownButton.TextSize = 10
				DropdownButton.AutoButtonColor = false

				local DropdownButtonCorner = Instance.new("UICorner")
				DropdownButtonCorner.CornerRadius = UDim.new(0, 4)
				DropdownButtonCorner.Parent = DropdownButton

				local DropdownList = Instance.new("ScrollingFrame")
				DropdownList.Parent = DropdownFrame
				DropdownList.BackgroundColor3 = Colors.Secondary
				DropdownList.BackgroundTransparency = 0.5
				DropdownList.Position = UDim2.new(0, 0, 0, 25)
				DropdownList.Size = UDim2.new(1, 0, 0, 0)
				DropdownList.ScrollBarThickness = 2
				DropdownList.ScrollBarImageColor3 = Colors.Accent
				DropdownList.CanvasSize = UDim2.new(0, 0, 0, 0)
				DropdownList.Visible = false

				local DropdownListCorner = Instance.new("UICorner")
				DropdownListCorner.CornerRadius = UDim.new(0, 4)
				DropdownListCorner.Parent = DropdownList

				local DropdownListLayout = Instance.new("UIListLayout")
				DropdownListLayout.Parent = DropdownList
				DropdownListLayout.SortOrder = Enum.SortOrder.LayoutOrder
				DropdownListLayout.Padding = UDim.new(0, 2)

				DropdownListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
					DropdownList.CanvasSize = UDim2.new(0, 0, 0, DropdownListLayout.AbsoluteContentSize.Y)
				end)

				local isOpen = false
				local selectedOption = default or options[1]

				local function UpdateDropdown()
					local listHeight = isOpen and DropdownList.CanvasSize.Y.Offset or 0
					DropdownFrame.Size = UDim2.new(1, 0, 0, 25 + listHeight)
					DropdownList.Size = UDim2.new(1, 0, 0, listHeight)
					DropdownList.Visible = isOpen
					self.UpdateSize()
				end

				for _, option in ipairs(options) do
					local OptionButton = Instance.new("TextButton")
					OptionButton.Parent = DropdownList
					OptionButton.BackgroundColor3 = Colors.Gray
					OptionButton.BackgroundTransparency = 0.5
					OptionButton.Size = UDim2.new(1, 0, 0, 15)
					OptionButton.Font = Enum.Font.Gotham
					OptionButton.Text = option
					OptionButton.TextColor3 = Colors.Text
					OptionButton.TextSize = 10
					OptionButton.AutoButtonColor = false

					local OptionCorner = Instance.new("UICorner")
					OptionCorner.CornerRadius = UDim.new(0, 4)
					OptionCorner.Parent = OptionButton

					OptionButton.MouseButton1Click:Connect(function()
						selectedOption = option
						DropdownButton.Text = option
						isOpen = false
						UpdateDropdown()
						if callback then callback(option) end
					end)
				end

				DropdownButton.MouseButton1Click:Connect(function()
					isOpen = not isOpen
					UpdateDropdown()
				end)

				self.UpdateSize()
				return DropdownFrame, function(newOptions)
					for _, child in ipairs(DropdownList:GetChildren()) do
						if child:IsA("TextButton") then
							child:Destroy()
						end
					end
					options = newOptions
					for _, option in ipairs(options) do
						local OptionButton = Instance.new("TextButton")
						OptionButton.Parent = DropdownList
						OptionButton.BackgroundColor3 = Colors.Gray
						OptionButton.BackgroundTransparency = 0.5
						OptionButton.Size = UDim2.new(1, 0, 0, 15)
						OptionButton.Font = Enum.Font.Gotham
						OptionButton.Text = option
						OptionButton.TextColor3 = Colors.Text
						OptionButton.TextSize = 10
						OptionButton.AutoButtonColor = false

						local OptionCorner = Instance.new("UICorner")
						OptionCorner.CornerRadius = UDim.new(0, 4)
						OptionCorner.Parent = OptionButton

						OptionButton.MouseButton1Click:Connect(function()
							selectedOption = option
							DropdownButton.Text = option
							isOpen = false
							UpdateDropdown()
							if callback then callback(option) end
						end)
					end
					if not table.find(options, selectedOption) then
						selectedOption = options[1]
						DropdownButton.Text = selectedOption
						if callback then callback(selectedOption) end
					end
				end
			end

			function Section:CreateMultiDropdown(name, options, defaults, callback)
				local MultiDropdownFrame = Instance.new("Frame")
				MultiDropdownFrame.Name = name .. "MultiDropdown"
				MultiDropdownFrame.Parent = self.Container
				MultiDropdownFrame.BackgroundColor3 = Colors.Gray
				MultiDropdownFrame.BackgroundTransparency = 0.5
				MultiDropdownFrame.Size = UDim2.new(1, 0, 0, 25)
				MultiDropdownFrame.ClipsDescendants = true

				local MultiDropdownCorner = Instance.new("UICorner")
				MultiDropdownCorner.CornerRadius = UDim.new(0, 4)
				MultiDropdownCorner.Parent = MultiDropdownFrame

				local MultiDropdownLabel = Instance.new("TextLabel")
				MultiDropdownLabel.Parent = MultiDropdownFrame
				MultiDropdownLabel.BackgroundTransparency = 1
				MultiDropdownLabel.Position = UDim2.new(0, 10, 0, 0)
				MultiDropdownLabel.Size = UDim2.new(0, 200, 0, 25)
				MultiDropdownLabel.Font = Enum.Font.Gotham
				MultiDropdownLabel.Text = name
				MultiDropdownLabel.TextColor3 = Colors.Text
				MultiDropdownLabel.TextSize = 12
				MultiDropdownLabel.TextXAlignment = Enum.TextXAlignment.Left
				MultiDropdownLabel.TextTruncate = Enum.TextTruncate.AtEnd

				local MultiDropdownButton = Instance.new("TextButton")
				MultiDropdownButton.Parent = MultiDropdownFrame
				MultiDropdownButton.BackgroundColor3 = Colors.Secondary
				MultiDropdownButton.BackgroundTransparency = 0.5
				MultiDropdownButton.Position = UDim2.new(1, -70, 0, 5)
				MultiDropdownButton.Size = UDim2.new(0, 60, 0, 15)
				MultiDropdownButton.Font = Enum.Font.Gotham
				MultiDropdownButton.Text = table.concat(defaults or {}, ", ") or ""
				MultiDropdownButton.TextColor3 = Colors.Text
				MultiDropdownButton.TextSize = 10
				MultiDropdownButton.AutoButtonColor = false
				MultiDropdownButton.ClipsDescendants = true
				MultiDropdownButton.TextTruncate = Enum.TextTruncate.SplitWord

				local MultiDropdownButtonCorner = Instance.new("UICorner")
				MultiDropdownButtonCorner.CornerRadius = UDim.new(0, 4)
				MultiDropdownButtonCorner.Parent = MultiDropdownButton

				local MultiDropdownList = Instance.new("ScrollingFrame")
				MultiDropdownList.Parent = MultiDropdownFrame
				MultiDropdownList.BackgroundColor3 = Colors.Secondary
				MultiDropdownList.BackgroundTransparency = 0.5
				MultiDropdownList.Position = UDim2.new(0, 0, 0, 25)
				MultiDropdownList.Size = UDim2.new(1, 0, 0, 0)
				MultiDropdownList.ScrollBarThickness = 2
				MultiDropdownList.ScrollBarImageColor3 = Colors.Accent
				MultiDropdownList.CanvasSize = UDim2.new(0, 0, 0, 0)
				MultiDropdownList.Visible = false

				local MultiDropdownListCorner = Instance.new("UICorner")
				MultiDropdownListCorner.CornerRadius = UDim.new(0, 4)
				MultiDropdownListCorner.Parent = MultiDropdownList

				local MultiDropdownListLayout = Instance.new("UIListLayout")
				MultiDropdownListLayout.Parent = MultiDropdownList
				MultiDropdownListLayout.SortOrder = Enum.SortOrder.LayoutOrder
				MultiDropdownListLayout.Padding = UDim.new(0, 2)

				MultiDropdownListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
					MultiDropdownList.CanvasSize = UDim2.new(0, 0, 0, MultiDropdownListLayout.AbsoluteContentSize.Y)
				end)

				local isOpen = false
				local selectedOptions = defaults or {}

				local function UpdateMultiDropdown()
					local listHeight = isOpen and MultiDropdownList.CanvasSize.Y.Offset or 0
					MultiDropdownFrame.Size = UDim2.new(1, 0, 0, 25 + listHeight)
					MultiDropdownList.Size = UDim2.new(1, 0, 0, listHeight)
					MultiDropdownList.Visible = isOpen
					MultiDropdownButton.Text = table.concat(selectedOptions, ", ") or ""
					self.UpdateSize()
				end

				local function CreateOptionButton(option)
					local OptionFrame = Instance.new("Frame")
					OptionFrame.Parent = MultiDropdownList
					OptionFrame.BackgroundColor3 = Colors.Gray
					OptionFrame.BackgroundTransparency = 0.5
					OptionFrame.Size = UDim2.new(1, 0, 0, 15)

					local OptionCorner = Instance.new("UICorner")
					OptionCorner.CornerRadius = UDim.new(0, 4)
					OptionCorner.Parent = OptionFrame

					local OptionCheck = Instance.new("TextLabel")
					OptionCheck.Parent = OptionFrame
					OptionCheck.BackgroundTransparency = 1
					OptionCheck.Position = UDim2.new(0, 2, 0, 0)
					OptionCheck.Size = UDim2.new(0, 15, 1, 0)
					OptionCheck.Font = Enum.Font.Gotham
					OptionCheck.Text = table.find(selectedOptions, option) and "âœ“" or ""
					OptionCheck.TextColor3 = Colors.Text
					OptionCheck.TextSize = 10

					local OptionLabel = Instance.new("TextButton")
					OptionLabel.Parent = OptionFrame
					OptionLabel.BackgroundTransparency = 1
					OptionLabel.Position = UDim2.new(0, 17, 0, 0)
					OptionLabel.Size = UDim2.new(1, -17, 1, 0)
					OptionLabel.Font = Enum.Font.Gotham
					OptionLabel.Text = option
					OptionLabel.TextColor3 = Colors.Text
					OptionLabel.TextSize = 10
					OptionLabel.TextXAlignment = Enum.TextXAlignment.Left
					OptionLabel.AutoButtonColor = false

					OptionLabel.MouseButton1Click:Connect(function()
						if table.find(selectedOptions, option) then
							table.remove(selectedOptions, table.find(selectedOptions, option))
						else
							table.insert(selectedOptions, option)
						end
						OptionCheck.Text = table.find(selectedOptions, option) and "âœ“" or ""
						MultiDropdownButton.Text = table.concat(selectedOptions, ", ") or ""
						if callback then callback(selectedOptions) end
					end)

					return OptionFrame
				end

				for _, option in ipairs(options) do
					CreateOptionButton(option)
				end

				MultiDropdownButton.MouseButton1Click:Connect(function()
					isOpen = not isOpen
					UpdateMultiDropdown()
				end)

				self.UpdateSize()
				return MultiDropdownFrame, function(newOptions)
					for _, child in ipairs(MultiDropdownList:GetChildren()) do
						if child:IsA("Frame") then
							child:Destroy()
						end
					end
					options = newOptions
					selectedOptions = {}
					for _, option in ipairs(options) do
						CreateOptionButton(option)
					end
					MultiDropdownButton.Text = ""
					if callback then callback(selectedOptions) end
				end
			end

			function Section:CreateKeyBind(name, default, callback)
				local KeyBindFrame = Instance.new("Frame")
				KeyBindFrame.Name = name .. "KeyBind"
				KeyBindFrame.Parent = self.Container
				KeyBindFrame.BackgroundColor3 = Colors.Gray
				KeyBindFrame.BackgroundTransparency = 0.5
				KeyBindFrame.Size = UDim2.new(1, 0, 0, 25)

				local KeyBindCorner = Instance.new("UICorner")
				KeyBindCorner.CornerRadius = UDim.new(0, 4)
				KeyBindCorner.Parent = KeyBindFrame

				local KeyBindLabel = Instance.new("TextLabel")
				KeyBindLabel.Parent = KeyBindFrame
				KeyBindLabel.BackgroundTransparency = 1
				KeyBindLabel.Position = UDim2.new(0, 10, 0, 0)
				KeyBindLabel.Size = UDim2.new(0, 200, 1, 0)
				KeyBindLabel.Font = Enum.Font.Gotham
				KeyBindLabel.Text = name
				KeyBindLabel.TextColor3 = Colors.Text
				KeyBindLabel.TextSize = 12
				KeyBindLabel.TextXAlignment = Enum.TextXAlignment.Left
				KeyBindLabel.TextTruncate = Enum.TextTruncate.AtEnd

				local KeyBindButton = Instance.new("TextButton")
				KeyBindButton.Parent = KeyBindFrame
				KeyBindButton.BackgroundColor3 = Colors.Secondary
				KeyBindButton.BackgroundTransparency = 0.5
				KeyBindButton.Position = UDim2.new(1, -70, 0, 5)
				KeyBindButton.Size = UDim2.new(0, 60, 0, 15)
				KeyBindButton.Font = Enum.Font.Gotham
				KeyBindButton.Text = default.Name or "None"
				KeyBindButton.TextColor3 = Colors.Text
				KeyBindButton.TextSize = 10
				KeyBindButton.AutoButtonColor = false

				local KeyBindButtonCorner = Instance.new("UICorner")
				KeyBindButtonCorner.CornerRadius = UDim.new(0, 4)
				KeyBindButtonCorner.Parent = KeyBindButton

				local binding = false
				local currentKey = default

				KeyBindButton.MouseButton1Click:Connect(function()
					binding = true
					KeyBindButton.Text = "..."
				end)

				UserInputService.InputBegan:Connect(function(input)
					if binding and input.UserInputType == Enum.UserInputType.Keyboard then
						currentKey = input.KeyCode
						KeyBindButton.Text = currentKey.Name
						binding = false
						if callback then callback(currentKey) end
					end
				end)

				self.UpdateSize()
				return KeyBindFrame, function(newKey)
					currentKey = newKey
					KeyBindButton.Text = currentKey.Name
					if callback then callback(currentKey) end
				end
			end

			function Section:CreateTextBox(name, default, callback)
				local TextBoxFrame = Instance.new("Frame")
				TextBoxFrame.Name = name .. "TextBox"
				TextBoxFrame.Parent = self.Container
				TextBoxFrame.BackgroundColor3 = Colors.Gray
				TextBoxFrame.BackgroundTransparency = 0.5
				TextBoxFrame.Size = UDim2.new(1, 0, 0, 25)

				local TextBoxCorner = Instance.new("UICorner")
				TextBoxCorner.CornerRadius = UDim.new(0, 4)
				TextBoxCorner.Parent = TextBoxFrame

				local TextBoxLabel = Instance.new("TextLabel")
				TextBoxLabel.Parent = TextBoxFrame
				TextBoxLabel.BackgroundTransparency = 1
				TextBoxLabel.Position = UDim2.new(0, 10, 0, 0)
				TextBoxLabel.Size = UDim2.new(0, 200, 1, 0)
				TextBoxLabel.Font = Enum.Font.Gotham
				TextBoxLabel.Text = name
				TextBoxLabel.TextColor3 = Colors.Text
				TextBoxLabel.TextSize = 12
				TextBoxLabel.TextXAlignment = Enum.TextXAlignment.Left
				TextBoxLabel.TextTruncate = Enum.TextTruncate.AtEnd

				local TextBoxInput = Instance.new("TextBox")
				TextBoxInput.Parent = TextBoxFrame
				TextBoxInput.BackgroundColor3 = Colors.Secondary
				TextBoxInput.BackgroundTransparency = 0.5
				TextBoxInput.Position = UDim2.new(1, -70, 0, 5)
				TextBoxInput.Size = UDim2.new(0, 60, 0, 15)
				TextBoxInput.Font = Enum.Font.Gotham
				TextBoxInput.Text = default or ""
				TextBoxInput.TextColor3 = Colors.Text
				TextBoxInput.TextSize = 10

				local TextBoxInputCorner = Instance.new("UICorner")
				TextBoxInputCorner.CornerRadius = UDim.new(0, 4)
				TextBoxInputCorner.Parent = TextBoxInput

				TextBoxInput.FocusLost:Connect(function(enterPressed)
					if enterPressed then
						if callback then callback(TextBoxInput.Text) end
					end
				end)

				self.UpdateSize()
				return TextBoxInput
			end

			table.insert(self.Sections, Section)
			return Section
		end

		table.insert(self.Tabs, Tab)
		return Tab
	end

	return Window
end

return MoonLightLib
